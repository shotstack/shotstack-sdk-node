/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The MuxDestinationOptions model module.
 * @module model/MuxDestinationOptions
 * @version 0.2.6
 */
class MuxDestinationOptions {
    /**
     * Constructs a new <code>MuxDestinationOptions</code>.
     * Pass additional options to control how Mux processes video. Currently supports playback_policy and passthrough options.
     * @alias module:model/MuxDestinationOptions
     */
    constructor() { 
        
        MuxDestinationOptions.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>MuxDestinationOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/MuxDestinationOptions} obj Optional instance to populate.
     * @return {module:model/MuxDestinationOptions} The populated <code>MuxDestinationOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new MuxDestinationOptions();

            if (data.hasOwnProperty('playbackPolicy')) {
                obj['playbackPolicy'] = ApiClient.convertToType(data['playbackPolicy'], ['String']);
            }
            if (data.hasOwnProperty('passthrough')) {
                obj['passthrough'] = ApiClient.convertToType(data['passthrough'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>MuxDestinationOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>MuxDestinationOptions</code>.
     */
    static validateJSON(data) {
        // ensure the json data is an array
        if (!Array.isArray(data['playbackPolicy'])) {
            throw new Error("Expected the field `playbackPolicy` to be an array in the JSON data but got " + data['playbackPolicy']);
        }
        // ensure the json data is a string
        if (data['passthrough'] && !(typeof data['passthrough'] === 'string' || data['passthrough'] instanceof String)) {
            throw new Error("Expected the field `passthrough` to be a primitive type in the JSON string but got " + data['passthrough']);
        }

        return true;
    }

/**
     * Returns Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
     * @return {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>}
     */
    getPlaybackPolicy() {
        return this.playbackPolicy;
    }

    /**
     * Sets Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
     * @param {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>} playbackPolicy Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
     */
    setPlaybackPolicy(playbackPolicy) {
        this['playbackPolicy'] = playbackPolicy;
        return this;
    }
/**
     * Returns Sets the Mux `passthrough` option. Max 255 characters.
     * @return {String}
     */
    getPassthrough() {
        return this.passthrough;
    }

    /**
     * Sets Sets the Mux `passthrough` option. Max 255 characters.
     * @param {String} passthrough Sets the Mux `passthrough` option. Max 255 characters.
     */
    setPassthrough(passthrough) {
        this['passthrough'] = passthrough;
        return this;
    }

}



/**
 * Sets the Mux `playback_policy` option. Value is an array of strings - use `public`, `signed`, or both.
 * @member {Array.<module:model/MuxDestinationOptions.PlaybackPolicyEnum>} playbackPolicy
 */
MuxDestinationOptions.prototype['playbackPolicy'] = undefined;

/**
 * Sets the Mux `passthrough` option. Max 255 characters.
 * @member {String} passthrough
 */
MuxDestinationOptions.prototype['passthrough'] = undefined;





/**
 * Allowed values for the <code>playbackPolicy</code> property.
 * @enum {String}
 * @readonly
 */
MuxDestinationOptions['PlaybackPolicyEnum'] = {

    /**
     * value: "public"
     * @const
     */
    "public": "public",

    /**
     * value: "signed"
     * @const
     */
    "signed": "signed"
};



export default MuxDestinationOptions;


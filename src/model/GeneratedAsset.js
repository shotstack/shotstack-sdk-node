/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are three API's, one for editing and generating assets (Edit API), one for managing hosted assets (Serve API) and one for ingesting and transforming source assets (Ingest API).  Each API has it's own base URL and collection of endpoints. Each API uses the same set of API keys.  **[Edit API](#shotstack-edit)** - [https://api.shotstack.io/edit/{version}](#)<br> Edit videos, images and audio assets in the cloud using a simple JSON schema and templates.  **[Serve API](#shotstack-serve)** - [https://api.shotstack.io/serve/{version}](#)<br> Inspect and manage the hosting of assets generated by the Edit and Ingest APIs.  **[Ingest API](#shotstack-ingest)** - [https://api.shotstack.io/ingest/{version}](#)<br> Ingest (upload, store and transform) source footage, images, audio and fonts to be used by the Edit API.  **[Create API](#shotstack-create)** - [https://api.shotstack.io/create/{version}](#)<br> Generate images, videos, voice overs and text using built in and third party generative AI providers. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import DIDGeneratedAsset from './DIDGeneratedAsset';
import ElevenLabsGeneratedAsset from './ElevenLabsGeneratedAsset';
import HeyGenGeneratedAsset from './HeyGenGeneratedAsset';
import OpenAiGeneratedAsset from './OpenAiGeneratedAsset';
import ShotstackGeneratedAsset from './ShotstackGeneratedAsset';
import StabilityAiGeneratedAsset from './StabilityAiGeneratedAsset';
import StabilityAiGeneratedAssetOptions from './StabilityAiGeneratedAssetOptions';

/**
 * The GeneratedAsset model module.
 * @module model/GeneratedAsset
 * @version 0.2.6
 */
class GeneratedAsset {
    /**
     * Constructs a new <code>GeneratedAsset</code>.
     * A generated asset is a media asset created by the Create API. You can use native or third party providers to generate video, audio and image files using Generative AI services like text-to-speech and text-to-avatar. The following providers are currently available: &lt;ul&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_shotstackgeneratedasset\&quot;&gt;ShotstackGeneratedAsset&lt;/a&gt;&lt;/li&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_didgeneratedasset\&quot;&gt;DIDGeneratedAsset&lt;/a&gt;&lt;/li&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_elevenlabsgeneratedasset\&quot;&gt;ElevenLabsGeneratedAsset&lt;/a&gt;&lt;/li&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_heygengeneratedasset\&quot;&gt;HeyGenGeneratedAsset&lt;/a&gt;&lt;/li&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_openaigeneratedasset\&quot;&gt;OpenAiGeneratedAsset&lt;/a&gt;&lt;/li&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_stabilityaigeneratedasset\&quot;&gt;StabilityAiGeneratedAsset&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;
     * @alias module:model/GeneratedAsset
     * @param {(module:model/DIDGeneratedAsset|module:model/ElevenLabsGeneratedAsset|module:model/HeyGenGeneratedAsset|module:model/OpenAiGeneratedAsset|module:model/ShotstackGeneratedAsset|module:model/StabilityAiGeneratedAsset)} instance The actual instance to initialize GeneratedAsset.
     */
    constructor(instance = null) {
        if (instance === null) {
            this.actualInstance = null;
            return;
        }
        var match = 0;
        var errorMessages = [];
        try {
            if (typeof instance === "ShotstackGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ShotstackGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create ShotstackGeneratedAsset from JS object
                this.actualInstance = ShotstackGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ShotstackGeneratedAsset
            errorMessages.push("Failed to construct ShotstackGeneratedAsset: " + err)
        }

        try {
            if (typeof instance === "DIDGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                DIDGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create DIDGeneratedAsset from JS object
                this.actualInstance = DIDGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into DIDGeneratedAsset
            errorMessages.push("Failed to construct DIDGeneratedAsset: " + err)
        }

        try {
            if (typeof instance === "ElevenLabsGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                ElevenLabsGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create ElevenLabsGeneratedAsset from JS object
                this.actualInstance = ElevenLabsGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into ElevenLabsGeneratedAsset
            errorMessages.push("Failed to construct ElevenLabsGeneratedAsset: " + err)
        }

        try {
            if (typeof instance === "HeyGenGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                HeyGenGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create HeyGenGeneratedAsset from JS object
                this.actualInstance = HeyGenGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into HeyGenGeneratedAsset
            errorMessages.push("Failed to construct HeyGenGeneratedAsset: " + err)
        }

        try {
            if (typeof instance === "OpenAiGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                OpenAiGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create OpenAiGeneratedAsset from JS object
                this.actualInstance = OpenAiGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into OpenAiGeneratedAsset
            errorMessages.push("Failed to construct OpenAiGeneratedAsset: " + err)
        }

        try {
            if (typeof instance === "StabilityAiGeneratedAsset") {
                this.actualInstance = instance;
            } else {
                // plain JS object
                // validate the object
                StabilityAiGeneratedAsset.validateJSON(instance); // throw an exception if no match
                // create StabilityAiGeneratedAsset from JS object
                this.actualInstance = StabilityAiGeneratedAsset.constructFromObject(instance);
            }
            match++;
        } catch(err) {
            // json data failed to deserialize into StabilityAiGeneratedAsset
            errorMessages.push("Failed to construct StabilityAiGeneratedAsset: " + err)
        }

        if (match > 1) {
            throw new Error("Multiple matches found constructing `GeneratedAsset` with oneOf schemas DIDGeneratedAsset, ElevenLabsGeneratedAsset, HeyGenGeneratedAsset, OpenAiGeneratedAsset, ShotstackGeneratedAsset, StabilityAiGeneratedAsset. Input: " + JSON.stringify(instance));
        } else if (match === 0) {
            this.actualInstance = null; // clear the actual instance in case there are multiple matches
            throw new Error("No match found constructing `GeneratedAsset` with oneOf schemas DIDGeneratedAsset, ElevenLabsGeneratedAsset, HeyGenGeneratedAsset, OpenAiGeneratedAsset, ShotstackGeneratedAsset, StabilityAiGeneratedAsset. Details: " +
                            errorMessages.join(", "));
        } else { // only 1 match
            // the input is valid
        }
    }

    /**
     * Constructs a <code>GeneratedAsset</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneratedAsset} obj Optional instance to populate.
     * @return {module:model/GeneratedAsset} The populated <code>GeneratedAsset</code> instance.
     */
    static constructFromObject(data, obj) {
        return new GeneratedAsset(data);
    }

    /**
     * Gets the actual instance, which can be <code>DIDGeneratedAsset</code>, <code>ElevenLabsGeneratedAsset</code>, <code>HeyGenGeneratedAsset</code>, <code>OpenAiGeneratedAsset</code>, <code>ShotstackGeneratedAsset</code>, <code>StabilityAiGeneratedAsset</code>.
     * @return {(module:model/DIDGeneratedAsset|module:model/ElevenLabsGeneratedAsset|module:model/HeyGenGeneratedAsset|module:model/OpenAiGeneratedAsset|module:model/ShotstackGeneratedAsset|module:model/StabilityAiGeneratedAsset)} The actual instance.
     */
    getActualInstance() {
        return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>DIDGeneratedAsset</code>, <code>ElevenLabsGeneratedAsset</code>, <code>HeyGenGeneratedAsset</code>, <code>OpenAiGeneratedAsset</code>, <code>ShotstackGeneratedAsset</code>, <code>StabilityAiGeneratedAsset</code>.
     * @param {(module:model/DIDGeneratedAsset|module:model/ElevenLabsGeneratedAsset|module:model/HeyGenGeneratedAsset|module:model/OpenAiGeneratedAsset|module:model/ShotstackGeneratedAsset|module:model/StabilityAiGeneratedAsset)} obj The actual instance.
     */
    setActualInstance(obj) {
       this.actualInstance = GeneratedAsset.constructFromObject(obj).getActualInstance();
    }

    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    toJSON = function(){
        return this.getActualInstance();
    }

    /**
     * Create an instance of GeneratedAsset from a JSON string.
     * @param {string} json_string JSON string.
     * @return {module:model/GeneratedAsset} An instance of GeneratedAsset.
     */
    static fromJSON = function(json_string){
        return GeneratedAsset.constructFromObject(JSON.parse(json_string));
    }
}

/**
 * The name of the provider - set to `stability-ai` for Stability AI.
 * @member {module:model/GeneratedAsset.ProviderEnum} provider
 * @default 'stability-ai'
 */
GeneratedAsset.prototype['provider'] = 'stability-ai';

/**
 * @member {module:model/StabilityAiGeneratedAssetOptions} options
 */
GeneratedAsset.prototype['options'] = undefined;


GeneratedAsset.OneOf = ["DIDGeneratedAsset", "ElevenLabsGeneratedAsset", "HeyGenGeneratedAsset", "OpenAiGeneratedAsset", "ShotstackGeneratedAsset", "StabilityAiGeneratedAsset"];

export default GeneratedAsset;


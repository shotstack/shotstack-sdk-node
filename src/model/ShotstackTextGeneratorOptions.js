/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShotstackTextGeneratorOptions model module.
 * @module model/ShotstackTextGeneratorOptions
 * @version 0.2.6
 */
class ShotstackTextGeneratorOptions {
    /**
     * Constructs a new <code>ShotstackTextGeneratorOptions</code>.
     * Options for the Shotstack text-generator service. Set a text prompt that will be used to generate a new body of text. The output will be generated as a text (txt) file available at the URL returned in the response.
     * @alias module:model/ShotstackTextGeneratorOptions
     * @param type {module:model/ShotstackTextGeneratorOptions.TypeEnum} The type of asset to generate - set to `text-generator` for text generation.
     * @param prompt {String} The text prompt to generate text from.
     */
    constructor(type, prompt) { 
        
        ShotstackTextGeneratorOptions.initialize(this, type, prompt);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, prompt) { 
        obj['type'] = type || 'text-generator';
        obj['prompt'] = prompt;
    }

    /**
     * Constructs a <code>ShotstackTextGeneratorOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShotstackTextGeneratorOptions} obj Optional instance to populate.
     * @return {module:model/ShotstackTextGeneratorOptions} The populated <code>ShotstackTextGeneratorOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShotstackTextGeneratorOptions();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('prompt')) {
                obj['prompt'] = ApiClient.convertToType(data['prompt'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShotstackTextGeneratorOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShotstackTextGeneratorOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShotstackTextGeneratorOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['prompt'] && !(typeof data['prompt'] === 'string' || data['prompt'] instanceof String)) {
            throw new Error("Expected the field `prompt` to be a primitive type in the JSON string but got " + data['prompt']);
        }

        return true;
    }

/**
     * Returns The type of asset to generate - set to `text-generator` for text generation.
     * @return {module:model/ShotstackTextGeneratorOptions.TypeEnum}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of asset to generate - set to `text-generator` for text generation.
     * @param {module:model/ShotstackTextGeneratorOptions.TypeEnum} type The type of asset to generate - set to `text-generator` for text generation.
     */
    setType(type) {
        this['type'] = type;
        return this;
    }
/**
     * Returns The text prompt to generate text from.
     * @return {String}
     */
    getPrompt() {
        return this.prompt;
    }

    /**
     * Sets The text prompt to generate text from.
     * @param {String} prompt The text prompt to generate text from.
     */
    setPrompt(prompt) {
        this['prompt'] = prompt;
        return this;
    }

}

ShotstackTextGeneratorOptions.RequiredProperties = ["type", "prompt"];

/**
 * The type of asset to generate - set to `text-generator` for text generation.
 * @member {module:model/ShotstackTextGeneratorOptions.TypeEnum} type
 * @default 'text-generator'
 */
ShotstackTextGeneratorOptions.prototype['type'] = 'text-generator';

/**
 * The text prompt to generate text from.
 * @member {String} prompt
 */
ShotstackTextGeneratorOptions.prototype['prompt'] = undefined;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ShotstackTextGeneratorOptions['TypeEnum'] = {

    /**
     * value: "text-generator"
     * @const
     */
    "text-generator": "text-generator"
};



export default ShotstackTextGeneratorOptions;


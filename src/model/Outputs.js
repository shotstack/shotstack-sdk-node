/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';
import Rendition from './Rendition';
import Transcription from './Transcription';

/**
 * The Outputs model module.
 * @module model/Outputs
 * @version 0.2.6
 */
class Outputs {
    /**
     * Constructs a new <code>Outputs</code>.
     * The output renditions and transformations that should be generated from the source file.
     * @alias module:model/Outputs
     */
    constructor() { 
        
        Outputs.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Outputs</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Outputs} obj Optional instance to populate.
     * @return {module:model/Outputs} The populated <code>Outputs</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Outputs();

            if (data.hasOwnProperty('renditions')) {
                obj['renditions'] = ApiClient.convertToType(data['renditions'], [Rendition]);
            }
            if (data.hasOwnProperty('transcription')) {
                obj['transcription'] = Transcription.constructFromObject(data['transcription']);
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Outputs</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Outputs</code>.
     */
    static validateJSON(data) {
        if (data['renditions']) { // data not null
            // ensure the json data is an array
            if (!Array.isArray(data['renditions'])) {
                throw new Error("Expected the field `renditions` to be an array in the JSON data but got " + data['renditions']);
            }
            // validate the optional field `renditions` (array)
            for (const item of data['renditions']) {
                Rendition.validateJSON(item);
            };
        }
        // validate the optional field `transcription`
        if (data['transcription']) { // data not null
          Transcription.validateJSON(data['transcription']);
        }

        return true;
    }

/**
     * Returns The output renditions and transformations that should be generated from the source file.
     * @return {Array.<module:model/Rendition>}
     */
    getRenditions() {
        return this.renditions;
    }

    /**
     * Sets The output renditions and transformations that should be generated from the source file.
     * @param {Array.<module:model/Rendition>} renditions The output renditions and transformations that should be generated from the source file.
     */
    setRenditions(renditions) {
        this['renditions'] = renditions;
        return this;
    }
/**
     * @return {module:model/Transcription}
     */
    getTranscription() {
        return this.transcription;
    }

    /**
     * @param {module:model/Transcription} transcription
     */
    setTranscription(transcription) {
        this['transcription'] = transcription;
        return this;
    }

}



/**
 * The output renditions and transformations that should be generated from the source file.
 * @member {Array.<module:model/Rendition>} renditions
 */
Outputs.prototype['renditions'] = undefined;

/**
 * @member {module:model/Transcription} transcription
 */
Outputs.prototype['transcription'] = undefined;






export default Outputs;


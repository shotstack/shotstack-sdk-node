/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The DolbyEnhancementOptions model module.
 * @module model/DolbyEnhancementOptions
 * @version 0.2.6
 */
class DolbyEnhancementOptions {
    /**
     * Constructs a new <code>DolbyEnhancementOptions</code>.
     * Options for the Dolby.io audio enhancement provider.
     * @alias module:model/DolbyEnhancementOptions
     * @param preset {module:model/DolbyEnhancementOptions.PresetEnum} The preset to use for the audio enhancement. The following presets are available: <ul>   <li>`conference` - Conference</li>   <li>`interview` - Interview</li>   <li>`lecture` - Lecture</li>   <li>`meeting` - Meeting</li>   <li>`mobile_phone` - Mobile Phone</li>   <li>`music` - Music</li>   <li>`podcast` - Podcast</li>   <li>`studio` - Studio</li>   <li>`voice_over` - Voice Over</li> </ul>
     */
    constructor(preset) { 
        
        DolbyEnhancementOptions.initialize(this, preset);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, preset) { 
        obj['preset'] = preset;
    }

    /**
     * Constructs a <code>DolbyEnhancementOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/DolbyEnhancementOptions} obj Optional instance to populate.
     * @return {module:model/DolbyEnhancementOptions} The populated <code>DolbyEnhancementOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new DolbyEnhancementOptions();

            if (data.hasOwnProperty('preset')) {
                obj['preset'] = ApiClient.convertToType(data['preset'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>DolbyEnhancementOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>DolbyEnhancementOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of DolbyEnhancementOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['preset'] && !(typeof data['preset'] === 'string' || data['preset'] instanceof String)) {
            throw new Error("Expected the field `preset` to be a primitive type in the JSON string but got " + data['preset']);
        }

        return true;
    }

/**
     * Returns The preset to use for the audio enhancement. The following presets are available: <ul>   <li>`conference` - Conference</li>   <li>`interview` - Interview</li>   <li>`lecture` - Lecture</li>   <li>`meeting` - Meeting</li>   <li>`mobile_phone` - Mobile Phone</li>   <li>`music` - Music</li>   <li>`podcast` - Podcast</li>   <li>`studio` - Studio</li>   <li>`voice_over` - Voice Over</li> </ul>
     * @return {module:model/DolbyEnhancementOptions.PresetEnum}
     */
    getPreset() {
        return this.preset;
    }

    /**
     * Sets The preset to use for the audio enhancement. The following presets are available: <ul>   <li>`conference` - Conference</li>   <li>`interview` - Interview</li>   <li>`lecture` - Lecture</li>   <li>`meeting` - Meeting</li>   <li>`mobile_phone` - Mobile Phone</li>   <li>`music` - Music</li>   <li>`podcast` - Podcast</li>   <li>`studio` - Studio</li>   <li>`voice_over` - Voice Over</li> </ul>
     * @param {module:model/DolbyEnhancementOptions.PresetEnum} preset The preset to use for the audio enhancement. The following presets are available: <ul>   <li>`conference` - Conference</li>   <li>`interview` - Interview</li>   <li>`lecture` - Lecture</li>   <li>`meeting` - Meeting</li>   <li>`mobile_phone` - Mobile Phone</li>   <li>`music` - Music</li>   <li>`podcast` - Podcast</li>   <li>`studio` - Studio</li>   <li>`voice_over` - Voice Over</li> </ul>
     */
    setPreset(preset) {
        this['preset'] = preset;
        return this;
    }

}

DolbyEnhancementOptions.RequiredProperties = ["preset"];

/**
 * The preset to use for the audio enhancement. The following presets are available: <ul>   <li>`conference` - Conference</li>   <li>`interview` - Interview</li>   <li>`lecture` - Lecture</li>   <li>`meeting` - Meeting</li>   <li>`mobile_phone` - Mobile Phone</li>   <li>`music` - Music</li>   <li>`podcast` - Podcast</li>   <li>`studio` - Studio</li>   <li>`voice_over` - Voice Over</li> </ul>
 * @member {module:model/DolbyEnhancementOptions.PresetEnum} preset
 */
DolbyEnhancementOptions.prototype['preset'] = undefined;





/**
 * Allowed values for the <code>preset</code> property.
 * @enum {String}
 * @readonly
 */
DolbyEnhancementOptions['PresetEnum'] = {

    /**
     * value: "conference"
     * @const
     */
    "conference": "conference",

    /**
     * value: "interview"
     * @const
     */
    "interview": "interview",

    /**
     * value: "lecture"
     * @const
     */
    "lecture": "lecture",

    /**
     * value: "meeting"
     * @const
     */
    "meeting": "meeting",

    /**
     * value: "mobile_phone"
     * @const
     */
    "mobile_phone": "mobile_phone",

    /**
     * value: "music"
     * @const
     */
    "music": "music",

    /**
     * value: "podcast"
     * @const
     */
    "podcast": "podcast",

    /**
     * value: "studio"
     * @const
     */
    "studio": "studio",

    /**
     * value: "voice_over"
     * @const
     */
    "voice_over": "voice_over"
};



export default DolbyEnhancementOptions;


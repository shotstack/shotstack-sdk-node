/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b> 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.FlipTransformation = factory(root.ShotstackSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The FlipTransformation model module.
   * @module model/FlipTransformation
   * @version v1
   */

  /**
   * Constructs a new <code>FlipTransformation</code>.
   * Flip a clip vertically or horizontally. Acts as a mirror effect of the clip along the selected plane.
   * @alias module:model/FlipTransformation
   * @class
   */
  var exports = function() {
    var _this = this;

  };

  /**
   * Constructs a <code>FlipTransformation</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/FlipTransformation} obj Optional instance to populate.
   * @return {module:model/FlipTransformation} The populated <code>FlipTransformation</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('horizontal')) {
        obj['horizontal'] = ApiClient.convertToType(data['horizontal'], 'Boolean');
      }
      if (data.hasOwnProperty('vertical')) {
        obj['vertical'] = ApiClient.convertToType(data['vertical'], 'Boolean');
      }
    }
    return obj;
  }

  /**
   * Flip a clip horizontally.
   * @member {Boolean} horizontal
   */
  exports.prototype['horizontal'] = undefined;
  /**
   * Flip a clip vertically.
   * @member {Boolean} vertical
   */
  exports.prototype['vertical'] = undefined;


  /**
   * Returns Flip a clip horizontally.
   * @return {Boolean}
   */
  exports.prototype.getHorizontal = function() {
    return this['horizontal'];
  }

  /**
   * Sets Flip a clip horizontally.
   * @param {Boolean} horizontal Flip a clip horizontally.
   */
  exports.prototype.setHorizontal = function(horizontal) {
    this['horizontal'] = horizontal;
    return this;
  }


  /**
   * Returns Flip a clip vertically.
   * @return {Boolean}
   */
  exports.prototype.getVertical = function() {
    return this['vertical'];
  }

  /**
   * Sets Flip a clip vertically.
   * @param {Boolean} vertical Flip a clip vertically.
   */
  exports.prototype.setVertical = function(vertical) {
    this['vertical'] = vertical;
    return this;
  }



  return exports;
}));



"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _HeyGenTextToAvatarOptions = _interopRequireDefault(require("./HeyGenTextToAvatarOptions"));
var _HeyGenGeneratedAssetOptions;
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _defineProperty(obj, key, value) { key = _toPropertyKey(key); if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The HeyGenGeneratedAssetOptions model module.
 * @module model/HeyGenGeneratedAssetOptions
 * @version 0.2.6
 */
var HeyGenGeneratedAssetOptions = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>HeyGenGeneratedAssetOptions</code>.
   * Generate assets using the third party HeyGen provider AI services.  The following AI generation services are available: &lt;ul&gt;   &lt;li&gt;&lt;a href&#x3D;\&quot;#tocs_heygentexttoavataroptions\&quot;&gt;HeyGenTextToAvatarOptions&lt;/a&gt;&lt;/li&gt; &lt;/ul&gt;
   * @alias module:model/HeyGenGeneratedAssetOptions
   * @param {(module:model/HeyGenTextToAvatarOptions)} instance The actual instance to initialize HeyGenGeneratedAssetOptions.
   */
  function HeyGenGeneratedAssetOptions() {
    var instance = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : null;
    _classCallCheck(this, HeyGenGeneratedAssetOptions);
    /**
     * Returns the JSON representation of the actual instance.
     * @return {string}
     */
    _defineProperty(this, "toJSON", function () {
      return this.getActualInstance();
    });
    if (instance === null) {
      this.actualInstance = null;
      return;
    }
    var match = 0;
    var errorMessages = [];
    try {
      if (typeof instance === "HeyGenTextToAvatarOptions") {
        this.actualInstance = instance;
      } else {
        // plain JS object
        // validate the object
        _HeyGenTextToAvatarOptions["default"].validateJSON(instance); // throw an exception if no match
        // create HeyGenTextToAvatarOptions from JS object
        this.actualInstance = _HeyGenTextToAvatarOptions["default"].constructFromObject(instance);
      }
      match++;
    } catch (err) {
      // json data failed to deserialize into HeyGenTextToAvatarOptions
      errorMessages.push("Failed to construct HeyGenTextToAvatarOptions: " + err);
    }
    if (match > 1) {
      throw new Error("Multiple matches found constructing `HeyGenGeneratedAssetOptions` with oneOf schemas HeyGenTextToAvatarOptions. Input: " + JSON.stringify(instance));
    } else if (match === 0) {
      this.actualInstance = null; // clear the actual instance in case there are multiple matches
      throw new Error("No match found constructing `HeyGenGeneratedAssetOptions` with oneOf schemas HeyGenTextToAvatarOptions. Details: " + errorMessages.join(", "));
    } else {// only 1 match
      // the input is valid
    }
  }

  /**
   * Constructs a <code>HeyGenGeneratedAssetOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/HeyGenGeneratedAssetOptions} obj Optional instance to populate.
   * @return {module:model/HeyGenGeneratedAssetOptions} The populated <code>HeyGenGeneratedAssetOptions</code> instance.
   */
  return _createClass(HeyGenGeneratedAssetOptions, [{
    key: "getActualInstance",
    value:
    /**
     * Gets the actual instance, which can be <code>HeyGenTextToAvatarOptions</code>.
     * @return {(module:model/HeyGenTextToAvatarOptions)} The actual instance.
     */
    function getActualInstance() {
      return this.actualInstance;
    }

    /**
     * Sets the actual instance, which can be <code>HeyGenTextToAvatarOptions</code>.
     * @param {(module:model/HeyGenTextToAvatarOptions)} obj The actual instance.
     */
  }, {
    key: "setActualInstance",
    value: function setActualInstance(obj) {
      this.actualInstance = HeyGenGeneratedAssetOptions.constructFromObject(obj).getActualInstance();
    }
  }], [{
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      return new HeyGenGeneratedAssetOptions(data);
    }
  }]);
}();
/**
 * The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
 * @member {module:model/HeyGenGeneratedAssetOptions.TypeEnum} type
 */
_HeyGenGeneratedAssetOptions = HeyGenGeneratedAssetOptions;
/**
 * Create an instance of HeyGenGeneratedAssetOptions from a JSON string.
 * @param {string} json_string JSON string.
 * @return {module:model/HeyGenGeneratedAssetOptions} An instance of HeyGenGeneratedAssetOptions.
 */
_defineProperty(HeyGenGeneratedAssetOptions, "fromJSON", function (json_string) {
  return _HeyGenGeneratedAssetOptions.constructFromObject(JSON.parse(json_string));
});
HeyGenGeneratedAssetOptions.prototype['type'] = undefined;

/**
 * The text or script that the avatar will narrate.
 * @member {String} text
 */
HeyGenGeneratedAssetOptions.prototype['text'] = undefined;

/**
 * The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
 * @member {module:model/HeyGenGeneratedAssetOptions.AvatarEnum} avatar
 */
HeyGenGeneratedAssetOptions.prototype['avatar'] = undefined;

/**
 * The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
 * @member {module:model/HeyGenGeneratedAssetOptions.VoiceEnum} voice
 */
HeyGenGeneratedAssetOptions.prototype['voice'] = undefined;

/**
 * The display style of the avatar, a rectangle `normal` or circular `circle` background. Defaults to `normal`.
 * @member {module:model/HeyGenGeneratedAssetOptions.AvatarStyleEnum} avatarStyle
 */
HeyGenGeneratedAssetOptions.prototype['avatarStyle'] = undefined;

/**
 * The background color of the video. Defaults to `#ffffff`.
 * @member {String} background
 */
HeyGenGeneratedAssetOptions.prototype['background'] = undefined;

/**
 * The aspect ratio of the video, `16:9` horizontal or `9:16` vertical. Defaults to `16:9`.
 * @member {module:model/HeyGenGeneratedAssetOptions.RatioEnum} ratio
 */
HeyGenGeneratedAssetOptions.prototype['ratio'] = undefined;

/**
 * A boolean flag indicating whether the video is for testing purposes. See the \"test\" parameter in [HeyGen](https://docs.heygen.com/reference/generate-video) for more details.
 * @member {Boolean} test
 */
HeyGenGeneratedAssetOptions.prototype['test'] = undefined;
HeyGenGeneratedAssetOptions.OneOf = ["HeyGenTextToAvatarOptions"];
var _default = exports["default"] = HeyGenGeneratedAssetOptions;
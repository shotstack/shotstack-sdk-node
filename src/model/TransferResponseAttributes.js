/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The TransferResponseAttributes model module.
 * @module model/TransferResponseAttributes
 * @version 0.2.6
 */
class TransferResponseAttributes {
    /**
     * Constructs a new <code>TransferResponseAttributes</code>.
     * The transfer request attributes inlcudling the user specified ID and status. Returned with [TransferResponseData](#tocs_transferresponsedata).
     * @alias module:model/TransferResponseAttributes
     */
    constructor() { 
        
        TransferResponseAttributes.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>TransferResponseAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/TransferResponseAttributes} obj Optional instance to populate.
     * @return {module:model/TransferResponseAttributes} The populated <code>TransferResponseAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new TransferResponseAttributes();

            if (data.hasOwnProperty('id')) {
                obj['id'] = ApiClient.convertToType(data['id'], 'String');
            }
            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>TransferResponseAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>TransferResponseAttributes</code>.
     */
    static validateJSON(data) {
        // ensure the json data is a string
        if (data['id'] && !(typeof data['id'] === 'string' || data['id'] instanceof String)) {
            throw new Error("Expected the field `id` to be a primitive type in the JSON string but got " + data['id']);
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }

        return true;
    }

/**
     * Returns The user provided ID for the asset
     * @return {String}
     */
    getId() {
        return this.id;
    }

    /**
     * Sets The user provided ID for the asset
     * @param {String} id The user provided ID for the asset
     */
    setId(id) {
        this['id'] = id;
        return this;
    }
/**
     * Returns The attributes of the asset transfer including the status.
     * @return {String}
     */
    getOwner() {
        return this.owner;
    }

    /**
     * Sets The attributes of the asset transfer including the status.
     * @param {String} owner The attributes of the asset transfer including the status.
     */
    setOwner(owner) {
        this['owner'] = owner;
        return this;
    }
/**
     * Returns The status of the asset transfer. <ul>   <li>`queued` - the transfer request has been queued</li>   <li>`failed` - the transfer request failed</li> </ul>
     * @return {module:model/TransferResponseAttributes.StatusEnum}
     */
    getStatus() {
        return this.status;
    }

    /**
     * Sets The status of the asset transfer. <ul>   <li>`queued` - the transfer request has been queued</li>   <li>`failed` - the transfer request failed</li> </ul>
     * @param {module:model/TransferResponseAttributes.StatusEnum} status The status of the asset transfer. <ul>   <li>`queued` - the transfer request has been queued</li>   <li>`failed` - the transfer request failed</li> </ul>
     */
    setStatus(status) {
        this['status'] = status;
        return this;
    }
/**
     * Returns The time the asset transfer was created.
     * @return {String}
     */
    getCreated() {
        return this.created;
    }

    /**
     * Sets The time the asset transfer was created.
     * @param {String} created The time the asset transfer was created.
     */
    setCreated(created) {
        this['created'] = created;
        return this;
    }

}



/**
 * The user provided ID for the asset
 * @member {String} id
 */
TransferResponseAttributes.prototype['id'] = undefined;

/**
 * The attributes of the asset transfer including the status.
 * @member {String} owner
 */
TransferResponseAttributes.prototype['owner'] = undefined;

/**
 * The status of the asset transfer. <ul>   <li>`queued` - the transfer request has been queued</li>   <li>`failed` - the transfer request failed</li> </ul>
 * @member {module:model/TransferResponseAttributes.StatusEnum} status
 */
TransferResponseAttributes.prototype['status'] = undefined;

/**
 * The time the asset transfer was created.
 * @member {String} created
 */
TransferResponseAttributes.prototype['created'] = undefined;





/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
TransferResponseAttributes['StatusEnum'] = {

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed"
};



export default TransferResponseAttributes;


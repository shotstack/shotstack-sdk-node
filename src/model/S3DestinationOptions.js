/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b> 
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.S3DestinationOptions = factory(root.ShotstackSdk.ApiClient);
  }
}(this, function(ApiClient) {
  'use strict';



  /**
   * The S3DestinationOptions model module.
   * @module model/S3DestinationOptions
   * @version v1
   */

  /**
   * Constructs a new <code>S3DestinationOptions</code>.
   * Pass additional options to control how files are stored in S3.
   * @alias module:model/S3DestinationOptions
   * @class
   * @param region {String} Choose the region to send the file to. Must be a valid  [AWS region](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) string like `us-east-1` or `ap-southeast-2`.
   * @param bucket {String} The bucket name to send files to. The bucket must exist in the AWS account before files can be sent.
   */
  var exports = function(region, bucket) {
    var _this = this;

    _this['region'] = region;
    _this['bucket'] = bucket;
  };

  /**
   * Constructs a <code>S3DestinationOptions</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/S3DestinationOptions} obj Optional instance to populate.
   * @return {module:model/S3DestinationOptions} The populated <code>S3DestinationOptions</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('region')) {
        obj['region'] = ApiClient.convertToType(data['region'], 'String');
      }
      if (data.hasOwnProperty('bucket')) {
        obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
      }
      if (data.hasOwnProperty('prefix')) {
        obj['prefix'] = ApiClient.convertToType(data['prefix'], 'String');
      }
      if (data.hasOwnProperty('filename')) {
        obj['filename'] = ApiClient.convertToType(data['filename'], 'String');
      }
      if (data.hasOwnProperty('acl')) {
        obj['acl'] = ApiClient.convertToType(data['acl'], 'String');
      }
    }
    return obj;
  }

  /**
   * Choose the region to send the file to. Must be a valid  [AWS region](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) string like `us-east-1` or `ap-southeast-2`.
   * @member {String} region
   */
  exports.prototype['region'] = undefined;
  /**
   * The bucket name to send files to. The bucket must exist in the AWS account before files can be sent.
   * @member {String} bucket
   */
  exports.prototype['bucket'] = undefined;
  /**
   * A prefix for the file being sent. This is typically a folder name, i.e. `videos` or `customerId/videos`.
   * @member {String} prefix
   */
  exports.prototype['prefix'] = undefined;
  /**
   * Use your own filename instead of the default render ID filename. Note: omit the file extension as this will be appended depending n the output format. Also `poster.jpg` and `-thumb.jpg` will be appended for poster and thumbnail images.
   * @member {String} filename
   */
  exports.prototype['filename'] = undefined;
  /**
   * Sets the S3 Access Control List (acl) permissions. Default is `private`. Must use a valid  S3 [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
   * @member {String} acl
   */
  exports.prototype['acl'] = undefined;


  /**
   * Returns Choose the region to send the file to. Must be a valid  [AWS region](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) string like `us-east-1` or `ap-southeast-2`.
   * @return {String}
   */
  exports.prototype.getRegion = function() {
    return this['region'];
  }

  /**
   * Sets Choose the region to send the file to. Must be a valid  [AWS region](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) string like `us-east-1` or `ap-southeast-2`.
   * @param {String} region Choose the region to send the file to. Must be a valid  [AWS region](https://docs.aws.amazon.com/general/latest/gr/s3.html#s3_region) string like `us-east-1` or `ap-southeast-2`.
   */
  exports.prototype.setRegion = function(region) {
    this['region'] = region;
    return this;
  }


  /**
   * Returns The bucket name to send files to. The bucket must exist in the AWS account before files can be sent.
   * @return {String}
   */
  exports.prototype.getBucket = function() {
    return this['bucket'];
  }

  /**
   * Sets The bucket name to send files to. The bucket must exist in the AWS account before files can be sent.
   * @param {String} bucket The bucket name to send files to. The bucket must exist in the AWS account before files can be sent.
   */
  exports.prototype.setBucket = function(bucket) {
    this['bucket'] = bucket;
    return this;
  }


  /**
   * Returns A prefix for the file being sent. This is typically a folder name, i.e. `videos` or `customerId/videos`.
   * @return {String}
   */
  exports.prototype.getPrefix = function() {
    return this['prefix'];
  }

  /**
   * Sets A prefix for the file being sent. This is typically a folder name, i.e. `videos` or `customerId/videos`.
   * @param {String} prefix A prefix for the file being sent. This is typically a folder name, i.e. `videos` or `customerId/videos`.
   */
  exports.prototype.setPrefix = function(prefix) {
    this['prefix'] = prefix;
    return this;
  }


  /**
   * Returns Use your own filename instead of the default render ID filename. Note: omit the file extension as this will be appended depending n the output format. Also `poster.jpg` and `-thumb.jpg` will be appended for poster and thumbnail images.
   * @return {String}
   */
  exports.prototype.getFilename = function() {
    return this['filename'];
  }

  /**
   * Sets Use your own filename instead of the default render ID filename. Note: omit the file extension as this will be appended depending n the output format. Also `poster.jpg` and `-thumb.jpg` will be appended for poster and thumbnail images.
   * @param {String} filename Use your own filename instead of the default render ID filename. Note: omit the file extension as this will be appended depending n the output format. Also `poster.jpg` and `-thumb.jpg` will be appended for poster and thumbnail images.
   */
  exports.prototype.setFilename = function(filename) {
    this['filename'] = filename;
    return this;
  }


  /**
   * Returns Sets the S3 Access Control List (acl) permissions. Default is `private`. Must use a valid  S3 [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
   * @return {String}
   */
  exports.prototype.getAcl = function() {
    return this['acl'];
  }

  /**
   * Sets Sets the S3 Access Control List (acl) permissions. Default is `private`. Must use a valid  S3 [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
   * @param {String} acl Sets the S3 Access Control List (acl) permissions. Default is `private`. Must use a valid  S3 [Canned ACL](https://docs.aws.amazon.com/AmazonS3/latest/userguide/acl-overview.html#canned-acl).
   */
  exports.prototype.setAcl = function(acl) {
    this['acl'] = acl;
    return this;
  }



  return exports;
}));



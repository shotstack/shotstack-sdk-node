"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The HeyGenTextToAvatarOptions model module.
 * @module model/HeyGenTextToAvatarOptions
 * @version 0.2.6
 */
var HeyGenTextToAvatarOptions = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>HeyGenTextToAvatarOptions</code>.
   * Options for the HeyGen text-to-avatar service. Set the text to be converted to an avatar and configure the avatars voice, speaking style, appearance and background. The output will be generated as an MP4 video file available at the URL returned in the response.
   * @alias module:model/HeyGenTextToAvatarOptions
   * @param type {module:model/HeyGenTextToAvatarOptions.TypeEnum} The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
   * @param text {String} The text or script that the avatar will narrate.
   * @param avatar {module:model/HeyGenTextToAvatarOptions.AvatarEnum} The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
   * @param voice {module:model/HeyGenTextToAvatarOptions.VoiceEnum} The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
   */
  function HeyGenTextToAvatarOptions(type, text, avatar, voice) {
    _classCallCheck(this, HeyGenTextToAvatarOptions);
    HeyGenTextToAvatarOptions.initialize(this, type, text, avatar, voice);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(HeyGenTextToAvatarOptions, [{
    key: "getType",
    value:
    /**
         * Returns The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
         * @return {module:model/HeyGenTextToAvatarOptions.TypeEnum}
         */
    function getType() {
      return this.type;
    }

    /**
     * Sets The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
     * @param {module:model/HeyGenTextToAvatarOptions.TypeEnum} type The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
     */
  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
      return this;
    }
    /**
         * Returns The text or script that the avatar will narrate.
         * @return {String}
         */
  }, {
    key: "getText",
    value: function getText() {
      return this.text;
    }

    /**
     * Sets The text or script that the avatar will narrate.
     * @param {String} text The text or script that the avatar will narrate.
     */
  }, {
    key: "setText",
    value: function setText(text) {
      this['text'] = text;
      return this;
    }
    /**
         * Returns The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
         * @return {module:model/HeyGenTextToAvatarOptions.AvatarEnum}
         */
  }, {
    key: "getAvatar",
    value: function getAvatar() {
      return this.avatar;
    }

    /**
     * Sets The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
     * @param {module:model/HeyGenTextToAvatarOptions.AvatarEnum} avatar The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
     */
  }, {
    key: "setAvatar",
    value: function setAvatar(avatar) {
      this['avatar'] = avatar;
      return this;
    }
    /**
         * Returns The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
         * @return {module:model/HeyGenTextToAvatarOptions.VoiceEnum}
         */
  }, {
    key: "getVoice",
    value: function getVoice() {
      return this.voice;
    }

    /**
     * Sets The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
     * @param {module:model/HeyGenTextToAvatarOptions.VoiceEnum} voice The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
     */
  }, {
    key: "setVoice",
    value: function setVoice(voice) {
      this['voice'] = voice;
      return this;
    }
    /**
         * Returns The display style of the avatar, a rectangle `normal` or circular `circle` background. Defaults to `normal`.
         * @return {module:model/HeyGenTextToAvatarOptions.AvatarStyleEnum}
         */
  }, {
    key: "getAvatarStyle",
    value: function getAvatarStyle() {
      return this.avatarStyle;
    }

    /**
     * Sets The display style of the avatar, a rectangle `normal` or circular `circle` background. Defaults to `normal`.
     * @param {module:model/HeyGenTextToAvatarOptions.AvatarStyleEnum} avatarStyle The display style of the avatar, a rectangle `normal` or circular `circle` background. Defaults to `normal`.
     */
  }, {
    key: "setAvatarStyle",
    value: function setAvatarStyle(avatarStyle) {
      this['avatarStyle'] = avatarStyle;
      return this;
    }
    /**
         * Returns The background color of the video. Defaults to `#ffffff`.
         * @return {String}
         */
  }, {
    key: "getBackground",
    value: function getBackground() {
      return this.background;
    }

    /**
     * Sets The background color of the video. Defaults to `#ffffff`.
     * @param {String} background The background color of the video. Defaults to `#ffffff`.
     */
  }, {
    key: "setBackground",
    value: function setBackground(background) {
      this['background'] = background;
      return this;
    }
    /**
         * Returns The aspect ratio of the video, `16:9` horizontal or `9:16` vertical. Defaults to `16:9`.
         * @return {module:model/HeyGenTextToAvatarOptions.RatioEnum}
         */
  }, {
    key: "getRatio",
    value: function getRatio() {
      return this.ratio;
    }

    /**
     * Sets The aspect ratio of the video, `16:9` horizontal or `9:16` vertical. Defaults to `16:9`.
     * @param {module:model/HeyGenTextToAvatarOptions.RatioEnum} ratio The aspect ratio of the video, `16:9` horizontal or `9:16` vertical. Defaults to `16:9`.
     */
  }, {
    key: "setRatio",
    value: function setRatio(ratio) {
      this['ratio'] = ratio;
      return this;
    }
    /**
         * Returns A boolean flag indicating whether the video is for testing purposes. See the \"test\" parameter in [HeyGen](https://docs.heygen.com/reference/generate-video) for more details.
         * @return {Boolean}
         */
  }, {
    key: "getTest",
    value: function getTest() {
      return this.test;
    }

    /**
     * Sets A boolean flag indicating whether the video is for testing purposes. See the \"test\" parameter in [HeyGen](https://docs.heygen.com/reference/generate-video) for more details.
     * @param {Boolean} test A boolean flag indicating whether the video is for testing purposes. See the \"test\" parameter in [HeyGen](https://docs.heygen.com/reference/generate-video) for more details.
     */
  }, {
    key: "setTest",
    value: function setTest(test) {
      this['test'] = test;
      return this;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, type, text, avatar, voice) {
      obj['type'] = type;
      obj['text'] = text;
      obj['avatar'] = avatar;
      obj['voice'] = voice;
    }

    /**
     * Constructs a <code>HeyGenTextToAvatarOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/HeyGenTextToAvatarOptions} obj Optional instance to populate.
     * @return {module:model/HeyGenTextToAvatarOptions} The populated <code>HeyGenTextToAvatarOptions</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new HeyGenTextToAvatarOptions();
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('text')) {
          obj['text'] = _ApiClient["default"].convertToType(data['text'], 'String');
        }
        if (data.hasOwnProperty('avatar')) {
          obj['avatar'] = _ApiClient["default"].convertToType(data['avatar'], 'String');
        }
        if (data.hasOwnProperty('voice')) {
          obj['voice'] = _ApiClient["default"].convertToType(data['voice'], 'String');
        }
        if (data.hasOwnProperty('avatarStyle')) {
          obj['avatarStyle'] = _ApiClient["default"].convertToType(data['avatarStyle'], 'String');
        }
        if (data.hasOwnProperty('background')) {
          obj['background'] = _ApiClient["default"].convertToType(data['background'], 'String');
        }
        if (data.hasOwnProperty('ratio')) {
          obj['ratio'] = _ApiClient["default"].convertToType(data['ratio'], 'String');
        }
        if (data.hasOwnProperty('test')) {
          obj['test'] = _ApiClient["default"].convertToType(data['test'], 'Boolean');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>HeyGenTextToAvatarOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>HeyGenTextToAvatarOptions</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(HeyGenTextToAvatarOptions.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }
      // ensure the json data is a string
      if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
        throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
      }
      // ensure the json data is a string
      if (data['avatar'] && !(typeof data['avatar'] === 'string' || data['avatar'] instanceof String)) {
        throw new Error("Expected the field `avatar` to be a primitive type in the JSON string but got " + data['avatar']);
      }
      // ensure the json data is a string
      if (data['voice'] && !(typeof data['voice'] === 'string' || data['voice'] instanceof String)) {
        throw new Error("Expected the field `voice` to be a primitive type in the JSON string but got " + data['voice']);
      }
      // ensure the json data is a string
      if (data['avatarStyle'] && !(typeof data['avatarStyle'] === 'string' || data['avatarStyle'] instanceof String)) {
        throw new Error("Expected the field `avatarStyle` to be a primitive type in the JSON string but got " + data['avatarStyle']);
      }
      // ensure the json data is a string
      if (data['background'] && !(typeof data['background'] === 'string' || data['background'] instanceof String)) {
        throw new Error("Expected the field `background` to be a primitive type in the JSON string but got " + data['background']);
      }
      // ensure the json data is a string
      if (data['ratio'] && !(typeof data['ratio'] === 'string' || data['ratio'] instanceof String)) {
        throw new Error("Expected the field `ratio` to be a primitive type in the JSON string but got " + data['ratio']);
      }
      return true;
    }
  }]);
}();
HeyGenTextToAvatarOptions.RequiredProperties = ["type", "text", "avatar", "voice"];

/**
 * The type of asset to generate - set to `text-to-avatar` for text-to-avatar.
 * @member {module:model/HeyGenTextToAvatarOptions.TypeEnum} type
 */
HeyGenTextToAvatarOptions.prototype['type'] = undefined;

/**
 * The text or script that the avatar will narrate.
 * @member {String} text
 */
HeyGenTextToAvatarOptions.prototype['text'] = undefined;

/**
 * The avatar character to generate. Select from the list of available avatars: <ul>   <li>`Angela`</li>   <li>`Bill`</li>   <li>`Daisy`</li>   <li>`Derek`</li>   <li>`Eva`</li>   <li>`Jake`</li>   <li>`Jeff`</li>   <li>`Jerome`</li>   <li>`Joon`</li>   <li>`Kayla`</li>   <li>`Kent`</li>   <li>`Luna`</li>   <li>`Mark`</li>   <li>`Matthew`</li>   <li>`Monica`</li>   <li>`Peter`</li>   <li>`Selina`</li>   <li>`Tanya`</li>   <li>`Thomas`</li>   <li>`Tina`</li>   <li>`Tyler`</li>   <li>`Vanessa`</li>   <li>`Vera`</li>   <li>`Wilson`</li>   <li>`Zoey`</li> </ul>
 * @member {module:model/HeyGenTextToAvatarOptions.AvatarEnum} avatar
 */
HeyGenTextToAvatarOptions.prototype['avatar'] = undefined;

/**
 * The avatars voice and speaking style. Select from the list of available voices: <ul>   <li>`Abb- - Natural`</li>   <li>`Adam - Natural`</li>   <li>`Aiston - Friendly`</li>   <li>`Alice - Newscaster`</li>   <li>`Alison - Cheerful`</li>   <li>`Amber - Friendly`</li>   <li>`Amy - Warm`</li>   <li>`Ana - Cheerful`</li>   <li>`Antoni - Friendly`</li>   <li>`Aria - Newscaster`</li>   <li>`Arnold - Cheerful`</li>   <li>`Arthur - Natural`</li>   <li>`Bella - Friendly`</li>   <li>`Belle - Natural`</li>   <li>`Brandon - Warm`</li>   <li>`Brian - Natural`</li>   <li>`Bruce - Natural`</li>   <li>`Cerise - Cheerful`</li>   <li>`Christopher - Calm`</li>   <li>`Clara - Professional`</li>   <li>`Connor - Natural`</li>   <li>`Dahlia - Friendly`</li>   <li>`Davis - Professional`</li>   <li>`Dean - Natural`</li>   <li>`Delbert - Cheerful`</li>   <li>`Edward - Friendly`</li>   <li>`Elaine - Calm`</li>   <li>`Emily - Natural`</li>   <li>`Emma - Newscaster`</li>   <li>`Eric - Newscaster`</li>   <li>`Grace - Natural`</li>   <li>`Hailey - Calm`</li>   <li>`Indira - Cheerful`</li>   <li>`Isabella - Cheerful`</li>   <li>`Jacob - Natural`</li>   <li>`Jahmai - Friendly`</li>   <li>`Jane - Serious`</li>   <li>`Jason - Serious`</li>   <li>`Jelle - Friendly`</li>   <li>`Jen - Natural`</li>   <li>`Jenny - Professional`</li>   <li>`Jodi - Cheerful`</li>   <li>`Joey - Calm`</li>   <li>`Johan - Friendly`</li>   <li>`Josie - Cheerful`</li>   <li>`Keanan - Natural`</li>   <li>`Keith - Cheerful`</li>   <li>`Kellie - Friendly`</li>   <li>`Lauren - Friendly`</li>   <li>`Leah - Natural`</li>   <li>`Liam - Professional`</li>   <li>`Libby - Natural`</li>   <li>`Lily - Professional`</li>   <li>`Lucas - Natural`</li>   <li>`Luke - Professional`</li>   <li>`Luna - Natural`</li>   <li>`Marieke - Natural`</li>   <li>`Matthew - Professional`</li>   <li>`Michelle - Natural`</li>   <li>`Mitchell - Natural`</li>   <li>`Molly - Newscaster`</li>   <li>`Monica - Calm`</li>   <li>`Natasha - Professional`</li>   <li>`Neerja - Newscaster`</li>   <li>`Noah - Serious`</li>   <li>`Oliver - Newscaster`</li>   <li>`Olivia - Calm`</li>   <li>`Paul - Natural`</li>   <li>`Prabhat - Natural`</li>   <li>`Raveena - Natural`</li>   <li>`Rudi - Friendly`</li>   <li>`Ryan - Professional`</li>   <li>`Sam - Natural`</li>   <li>`Sara - Cheerful`</li>   <li>`Sherry - Friendly`</li>   <li>`Sonia - Warm`</li>   <li>`Thomas - Natural`</li>   <li>`Todd - Professional`</li>   <li>`Tony - Professional`</li>   <li>`Tracy - Cheerful`</li>   <li>`Wayne - Natural`</li>   <li>`Wilder - Natural`</li>   <li>`Wille - Natural`</li>   <li>`William - Friendly`</li> </ul>
 * @member {module:model/HeyGenTextToAvatarOptions.VoiceEnum} voice
 */
HeyGenTextToAvatarOptions.prototype['voice'] = undefined;

/**
 * The display style of the avatar, a rectangle `normal` or circular `circle` background. Defaults to `normal`.
 * @member {module:model/HeyGenTextToAvatarOptions.AvatarStyleEnum} avatarStyle
 */
HeyGenTextToAvatarOptions.prototype['avatarStyle'] = undefined;

/**
 * The background color of the video. Defaults to `#ffffff`.
 * @member {String} background
 */
HeyGenTextToAvatarOptions.prototype['background'] = undefined;

/**
 * The aspect ratio of the video, `16:9` horizontal or `9:16` vertical. Defaults to `16:9`.
 * @member {module:model/HeyGenTextToAvatarOptions.RatioEnum} ratio
 */
HeyGenTextToAvatarOptions.prototype['ratio'] = undefined;

/**
 * A boolean flag indicating whether the video is for testing purposes. See the \"test\" parameter in [HeyGen](https://docs.heygen.com/reference/generate-video) for more details.
 * @member {Boolean} test
 */
HeyGenTextToAvatarOptions.prototype['test'] = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
HeyGenTextToAvatarOptions['TypeEnum'] = {
  /**
   * value: "text-to-avatar"
   * @const
   */
  "text-to-avatar": "text-to-avatar"
};

/**
 * Allowed values for the <code>avatar</code> property.
 * @enum {String}
 * @readonly
 */
HeyGenTextToAvatarOptions['AvatarEnum'] = {
  /**
   * value: "Angela"
   * @const
   */
  "Angela": "Angela",
  /**
   * value: "Bill"
   * @const
   */
  "Bill": "Bill",
  /**
   * value: "Daisy"
   * @const
   */
  "Daisy": "Daisy",
  /**
   * value: "Derek"
   * @const
   */
  "Derek": "Derek",
  /**
   * value: "Eva"
   * @const
   */
  "Eva": "Eva",
  /**
   * value: "Jake"
   * @const
   */
  "Jake": "Jake",
  /**
   * value: "Jeff"
   * @const
   */
  "Jeff": "Jeff",
  /**
   * value: "Jerome"
   * @const
   */
  "Jerome": "Jerome",
  /**
   * value: "Joon"
   * @const
   */
  "Joon": "Joon",
  /**
   * value: "Kayla"
   * @const
   */
  "Kayla": "Kayla",
  /**
   * value: "Kent"
   * @const
   */
  "Kent": "Kent",
  /**
   * value: "Luna"
   * @const
   */
  "Luna": "Luna",
  /**
   * value: "Mark"
   * @const
   */
  "Mark": "Mark",
  /**
   * value: "Matthew"
   * @const
   */
  "Matthew": "Matthew",
  /**
   * value: "Monica"
   * @const
   */
  "Monica": "Monica",
  /**
   * value: "Peter"
   * @const
   */
  "Peter": "Peter",
  /**
   * value: "Selina"
   * @const
   */
  "Selina": "Selina",
  /**
   * value: "Tanya"
   * @const
   */
  "Tanya": "Tanya",
  /**
   * value: "Thomas"
   * @const
   */
  "Thomas": "Thomas",
  /**
   * value: "Tina"
   * @const
   */
  "Tina": "Tina",
  /**
   * value: "Tyler"
   * @const
   */
  "Tyler": "Tyler",
  /**
   * value: "Vanessa"
   * @const
   */
  "Vanessa": "Vanessa",
  /**
   * value: "Vera"
   * @const
   */
  "Vera": "Vera",
  /**
   * value: "Wilson"
   * @const
   */
  "Wilson": "Wilson",
  /**
   * value: "Zoey"
   * @const
   */
  "Zoey": "Zoey"
};

/**
 * Allowed values for the <code>voice</code> property.
 * @enum {String}
 * @readonly
 */
HeyGenTextToAvatarOptions['VoiceEnum'] = {
  /**
   * value: "Abbi - Natural"
   * @const
   */
  "Abbi - Natural": "Abbi - Natural",
  /**
   * value: "Adam - Natural"
   * @const
   */
  "Adam - Natural": "Adam - Natural",
  /**
   * value: "Aiston - Friendly"
   * @const
   */
  "Aiston - Friendly": "Aiston - Friendly",
  /**
   * value: "Alice - Newscaster"
   * @const
   */
  "Alice - Newscaster": "Alice - Newscaster",
  /**
   * value: "Alison - Cheerful"
   * @const
   */
  "Alison - Cheerful": "Alison - Cheerful",
  /**
   * value: "Amber - Friendly"
   * @const
   */
  "Amber - Friendly": "Amber - Friendly",
  /**
   * value: "Amy - Warm"
   * @const
   */
  "Amy - Warm": "Amy - Warm",
  /**
   * value: "Ana - Cheerful"
   * @const
   */
  "Ana - Cheerful": "Ana - Cheerful",
  /**
   * value: "Antoni - Friendly"
   * @const
   */
  "Antoni - Friendly": "Antoni - Friendly",
  /**
   * value: "Aria - Newscaster"
   * @const
   */
  "Aria - Newscaster": "Aria - Newscaster",
  /**
   * value: "Arnold - Cheerful"
   * @const
   */
  "Arnold - Cheerful": "Arnold - Cheerful",
  /**
   * value: "Arthur - Natural"
   * @const
   */
  "Arthur - Natural": "Arthur - Natural",
  /**
   * value: "Bella - Friendly"
   * @const
   */
  "Bella - Friendly": "Bella - Friendly",
  /**
   * value: "Belle - Natural"
   * @const
   */
  "Belle - Natural": "Belle - Natural",
  /**
   * value: "Brandon - Warm"
   * @const
   */
  "Brandon - Warm": "Brandon - Warm",
  /**
   * value: "Brian - Natural"
   * @const
   */
  "Brian - Natural": "Brian - Natural",
  /**
   * value: "Bruce - Natural"
   * @const
   */
  "Bruce - Natural": "Bruce - Natural",
  /**
   * value: "Cerise - Cheerful"
   * @const
   */
  "Cerise - Cheerful": "Cerise - Cheerful",
  /**
   * value: "Christopher - Calm"
   * @const
   */
  "Christopher - Calm": "Christopher - Calm",
  /**
   * value: "Clara - Professional"
   * @const
   */
  "Clara - Professional": "Clara - Professional",
  /**
   * value: "Connor - Natural"
   * @const
   */
  "Connor - Natural": "Connor - Natural",
  /**
   * value: "Dahlia - Friendly"
   * @const
   */
  "Dahlia - Friendly": "Dahlia - Friendly",
  /**
   * value: "Davis - Professional"
   * @const
   */
  "Davis - Professional": "Davis - Professional",
  /**
   * value: "Dean - Natural"
   * @const
   */
  "Dean - Natural": "Dean - Natural",
  /**
   * value: "Delbert - Cheerful"
   * @const
   */
  "Delbert - Cheerful": "Delbert - Cheerful",
  /**
   * value: "Edward - Friendly"
   * @const
   */
  "Edward - Friendly": "Edward - Friendly",
  /**
   * value: "Elaine - Calm"
   * @const
   */
  "Elaine - Calm": "Elaine - Calm",
  /**
   * value: "Emily - Natural"
   * @const
   */
  "Emily - Natural": "Emily - Natural",
  /**
   * value: "Emma - Newscaster"
   * @const
   */
  "Emma - Newscaster": "Emma - Newscaster",
  /**
   * value: "Eric - Newscaster"
   * @const
   */
  "Eric - Newscaster": "Eric - Newscaster",
  /**
   * value: "Grace - Natural"
   * @const
   */
  "Grace - Natural": "Grace - Natural",
  /**
   * value: "Hailey - Calm"
   * @const
   */
  "Hailey - Calm": "Hailey - Calm",
  /**
   * value: "Indira - Cheerful"
   * @const
   */
  "Indira - Cheerful": "Indira - Cheerful",
  /**
   * value: "Isabella - Cheerful"
   * @const
   */
  "Isabella - Cheerful": "Isabella - Cheerful",
  /**
   * value: "Jacob - Natural"
   * @const
   */
  "Jacob - Natural": "Jacob - Natural",
  /**
   * value: "Jahmai - Friendly"
   * @const
   */
  "Jahmai - Friendly": "Jahmai - Friendly",
  /**
   * value: "Jane - Serious"
   * @const
   */
  "Jane - Serious": "Jane - Serious",
  /**
   * value: "Jason - Serious"
   * @const
   */
  "Jason - Serious": "Jason - Serious",
  /**
   * value: "Jelle - Friendly"
   * @const
   */
  "Jelle - Friendly": "Jelle - Friendly",
  /**
   * value: "Jen - Natural"
   * @const
   */
  "Jen - Natural": "Jen - Natural",
  /**
   * value: "Jenny - Professional"
   * @const
   */
  "Jenny - Professional": "Jenny - Professional",
  /**
   * value: "Jodi - Cheerful"
   * @const
   */
  "Jodi - Cheerful": "Jodi - Cheerful",
  /**
   * value: "Joey - Calm"
   * @const
   */
  "Joey - Calm": "Joey - Calm",
  /**
   * value: "Johan - Friendly"
   * @const
   */
  "Johan - Friendly": "Johan - Friendly",
  /**
   * value: "Josie - Cheerful"
   * @const
   */
  "Josie - Cheerful": "Josie - Cheerful",
  /**
   * value: "Keanan - Natural"
   * @const
   */
  "Keanan - Natural": "Keanan - Natural",
  /**
   * value: "Keith - Cheerful"
   * @const
   */
  "Keith - Cheerful": "Keith - Cheerful",
  /**
   * value: "Kellie - Friendly"
   * @const
   */
  "Kellie - Friendly": "Kellie - Friendly",
  /**
   * value: "Lauren - Friendly"
   * @const
   */
  "Lauren - Friendly": "Lauren - Friendly",
  /**
   * value: "Leah - Natural"
   * @const
   */
  "Leah - Natural": "Leah - Natural",
  /**
   * value: "Liam - Professional"
   * @const
   */
  "Liam - Professional": "Liam - Professional",
  /**
   * value: "Libby - Natural"
   * @const
   */
  "Libby - Natural": "Libby - Natural",
  /**
   * value: "Lily - Professional"
   * @const
   */
  "Lily - Professional": "Lily - Professional",
  /**
   * value: "Lucas - Natural"
   * @const
   */
  "Lucas - Natural": "Lucas - Natural",
  /**
   * value: "Luke - Professional"
   * @const
   */
  "Luke - Professional": "Luke - Professional",
  /**
   * value: "Luna - Natural"
   * @const
   */
  "Luna - Natural": "Luna - Natural",
  /**
   * value: "Marieke - Natural"
   * @const
   */
  "Marieke - Natural": "Marieke - Natural",
  /**
   * value: "Matthew - Professional"
   * @const
   */
  "Matthew - Professional": "Matthew - Professional",
  /**
   * value: "Michelle - Natural"
   * @const
   */
  "Michelle - Natural": "Michelle - Natural",
  /**
   * value: "Mitchell - Natural"
   * @const
   */
  "Mitchell - Natural": "Mitchell - Natural",
  /**
   * value: "Molly - Newscaster"
   * @const
   */
  "Molly - Newscaster": "Molly - Newscaster",
  /**
   * value: "Monica - Calm"
   * @const
   */
  "Monica - Calm": "Monica - Calm",
  /**
   * value: "Natasha - Professional"
   * @const
   */
  "Natasha - Professional": "Natasha - Professional",
  /**
   * value: "Neerja - Newscaster"
   * @const
   */
  "Neerja - Newscaster": "Neerja - Newscaster",
  /**
   * value: "Noah - Serious"
   * @const
   */
  "Noah - Serious": "Noah - Serious",
  /**
   * value: "Oliver - Newscaster"
   * @const
   */
  "Oliver - Newscaster": "Oliver - Newscaster",
  /**
   * value: "Olivia - Calm"
   * @const
   */
  "Olivia - Calm": "Olivia - Calm",
  /**
   * value: "Paul - Natural"
   * @const
   */
  "Paul - Natural": "Paul - Natural",
  /**
   * value: "Prabhat - Natural"
   * @const
   */
  "Prabhat - Natural": "Prabhat - Natural",
  /**
   * value: "Raveena - Natural"
   * @const
   */
  "Raveena - Natural": "Raveena - Natural",
  /**
   * value: "Rudi - Friendly"
   * @const
   */
  "Rudi - Friendly": "Rudi - Friendly",
  /**
   * value: "Ryan - Professional"
   * @const
   */
  "Ryan - Professional": "Ryan - Professional",
  /**
   * value: "Sam - Natural"
   * @const
   */
  "Sam - Natural": "Sam - Natural",
  /**
   * value: "Sara - Cheerful"
   * @const
   */
  "Sara - Cheerful": "Sara - Cheerful",
  /**
   * value: "Sherry - Friendly"
   * @const
   */
  "Sherry - Friendly": "Sherry - Friendly",
  /**
   * value: "Sonia - Warm"
   * @const
   */
  "Sonia - Warm": "Sonia - Warm",
  /**
   * value: "Thomas - Natural"
   * @const
   */
  "Thomas - Natural": "Thomas - Natural",
  /**
   * value: "Todd - Professional"
   * @const
   */
  "Todd - Professional": "Todd - Professional",
  /**
   * value: "Tony - Professional"
   * @const
   */
  "Tony - Professional": "Tony - Professional",
  /**
   * value: "Tracy - Cheerful"
   * @const
   */
  "Tracy - Cheerful": "Tracy - Cheerful",
  /**
   * value: "Wayne - Natural"
   * @const
   */
  "Wayne - Natural": "Wayne - Natural",
  /**
   * value: "Wilder - Natural"
   * @const
   */
  "Wilder - Natural": "Wilder - Natural",
  /**
   * value: "Wille - Natural"
   * @const
   */
  "Wille - Natural": "Wille - Natural",
  /**
   * value: "William - Friendly"
   * @const
   */
  "William - Friendly": "William - Friendly"
};

/**
 * Allowed values for the <code>avatarStyle</code> property.
 * @enum {String}
 * @readonly
 */
HeyGenTextToAvatarOptions['AvatarStyleEnum'] = {
  /**
   * value: "normal"
   * @const
   */
  "normal": "normal",
  /**
   * value: "circle"
   * @const
   */
  "circle": "circle"
};

/**
 * Allowed values for the <code>ratio</code> property.
 * @enum {String}
 * @readonly
 */
HeyGenTextToAvatarOptions['RatioEnum'] = {
  /**
   * value: "16:9"
   * @const
   */
  "16:9": "16:9",
  /**
   * value: "9:16"
   * @const
   */
  "9:16": "9:16"
};
var _default = exports["default"] = HeyGenTextToAvatarOptions;
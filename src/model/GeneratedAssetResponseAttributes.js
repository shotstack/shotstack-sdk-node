/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are three API's, one for editing and generating assets (Edit API), one for managing hosted assets (Serve API) and one for ingesting and transforming source assets (Ingest API).  Each API has it's own base URL and collection of endpoints. Each API uses the same set of API keys.  **[Edit API](#shotstack-edit)** - [https://api.shotstack.io/edit/{version}](#)<br> Edit videos, images and audio assets in the cloud using a simple JSON schema and templates.  **[Serve API](#shotstack-serve)** - [https://api.shotstack.io/serve/{version}](#)<br> Inspect and manage the hosting of assets generated by the Edit and Ingest APIs.  **[Ingest API](#shotstack-ingest)** - [https://api.shotstack.io/ingest/{version}](#)<br> Ingest (upload, store and transform) source footage, images, audio and fonts to be used by the Edit API.  **[Create API](#shotstack-create)** - [https://api.shotstack.io/create/{version}](#)<br> Generate images, videos, voice overs and text using built in and third party generative AI providers. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The GeneratedAssetResponseAttributes model module.
 * @module model/GeneratedAssetResponseAttributes
 * @version 0.2.6
 */
class GeneratedAssetResponseAttributes {
    /**
     * Constructs a new <code>GeneratedAssetResponseAttributes</code>.
     * The id and attributes of the generated asset.
     * @alias module:model/GeneratedAssetResponseAttributes
     * @param owner {String} The owner id of the asset.
     * @param provider {module:model/GeneratedAssetResponseAttributes.ProviderEnum} The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
     * @param type {module:model/GeneratedAssetResponseAttributes.TypeEnum} The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
     * @param status {module:model/GeneratedAssetResponseAttributes.StatusEnum} The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
     * @param created {String} The time the generate asset task was initially queued.
     * @param updated {String} The time the asset status was last updated.
     */
    constructor(owner, provider, type, status, created, updated) { 
        
        GeneratedAssetResponseAttributes.initialize(this, owner, provider, type, status, created, updated);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, owner, provider, type, status, created, updated) { 
        obj['owner'] = owner;
        obj['provider'] = provider;
        obj['type'] = type;
        obj['status'] = status;
        obj['created'] = created;
        obj['updated'] = updated;
    }

    /**
     * Constructs a <code>GeneratedAssetResponseAttributes</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/GeneratedAssetResponseAttributes} obj Optional instance to populate.
     * @return {module:model/GeneratedAssetResponseAttributes} The populated <code>GeneratedAssetResponseAttributes</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new GeneratedAssetResponseAttributes();

            if (data.hasOwnProperty('owner')) {
                obj['owner'] = ApiClient.convertToType(data['owner'], 'String');
            }
            if (data.hasOwnProperty('provider')) {
                obj['provider'] = ApiClient.convertToType(data['provider'], 'String');
            }
            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('url')) {
                obj['url'] = ApiClient.convertToType(data['url'], 'String');
            }
            if (data.hasOwnProperty('status')) {
                obj['status'] = ApiClient.convertToType(data['status'], 'String');
            }
            if (data.hasOwnProperty('created')) {
                obj['created'] = ApiClient.convertToType(data['created'], 'String');
            }
            if (data.hasOwnProperty('updated')) {
                obj['updated'] = ApiClient.convertToType(data['updated'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>GeneratedAssetResponseAttributes</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>GeneratedAssetResponseAttributes</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of GeneratedAssetResponseAttributes.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['owner'] && !(typeof data['owner'] === 'string' || data['owner'] instanceof String)) {
            throw new Error("Expected the field `owner` to be a primitive type in the JSON string but got " + data['owner']);
        }
        // ensure the json data is a string
        if (data['provider'] && !(typeof data['provider'] === 'string' || data['provider'] instanceof String)) {
            throw new Error("Expected the field `provider` to be a primitive type in the JSON string but got " + data['provider']);
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['url'] && !(typeof data['url'] === 'string' || data['url'] instanceof String)) {
            throw new Error("Expected the field `url` to be a primitive type in the JSON string but got " + data['url']);
        }
        // ensure the json data is a string
        if (data['status'] && !(typeof data['status'] === 'string' || data['status'] instanceof String)) {
            throw new Error("Expected the field `status` to be a primitive type in the JSON string but got " + data['status']);
        }
        // ensure the json data is a string
        if (data['created'] && !(typeof data['created'] === 'string' || data['created'] instanceof String)) {
            throw new Error("Expected the field `created` to be a primitive type in the JSON string but got " + data['created']);
        }
        // ensure the json data is a string
        if (data['updated'] && !(typeof data['updated'] === 'string' || data['updated'] instanceof String)) {
            throw new Error("Expected the field `updated` to be a primitive type in the JSON string but got " + data['updated']);
        }

        return true;
    }

/**
     * Returns The owner id of the asset.
     * @return {String}
     */
    getOwner() {
        return this.owner;
    }

    /**
     * Sets The owner id of the asset.
     * @param {String} owner The owner id of the asset.
     */
    setOwner(owner) {
        this['owner'] = owner;
        return this;
    }
/**
     * Returns The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
     * @return {module:model/GeneratedAssetResponseAttributes.ProviderEnum}
     */
    getProvider() {
        return this.provider;
    }

    /**
     * Sets The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
     * @param {module:model/GeneratedAssetResponseAttributes.ProviderEnum} provider The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
     */
    setProvider(provider) {
        this['provider'] = provider;
        return this;
    }
/**
     * Returns The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
     * @return {module:model/GeneratedAssetResponseAttributes.TypeEnum}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
     * @param {module:model/GeneratedAssetResponseAttributes.TypeEnum} type The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
     */
    setType(type) {
        this['type'] = type;
        return this;
    }
/**
     * Returns The URL of the asset file hosted by Shotstack. The file at the URL can be used by the Edit API. Generated asset file URL's consist of a base URL (AWS bucket), owner id, asset id and extension. The extension varies depending on the type of file generated.
     * @return {String}
     */
    getUrl() {
        return this.url;
    }

    /**
     * Sets The URL of the asset file hosted by Shotstack. The file at the URL can be used by the Edit API. Generated asset file URL's consist of a base URL (AWS bucket), owner id, asset id and extension. The extension varies depending on the type of file generated.
     * @param {String} url The URL of the asset file hosted by Shotstack. The file at the URL can be used by the Edit API. Generated asset file URL's consist of a base URL (AWS bucket), owner id, asset id and extension. The extension varies depending on the type of file generated.
     */
    setUrl(url) {
        this['url'] = url;
        return this;
    }
/**
     * Returns The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
     * @return {module:model/GeneratedAssetResponseAttributes.StatusEnum}
     */
    getStatus() {
        return this.status;
    }

    /**
     * Sets The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
     * @param {module:model/GeneratedAssetResponseAttributes.StatusEnum} status The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
     */
    setStatus(status) {
        this['status'] = status;
        return this;
    }
/**
     * Returns The time the generate asset task was initially queued.
     * @return {String}
     */
    getCreated() {
        return this.created;
    }

    /**
     * Sets The time the generate asset task was initially queued.
     * @param {String} created The time the generate asset task was initially queued.
     */
    setCreated(created) {
        this['created'] = created;
        return this;
    }
/**
     * Returns The time the asset status was last updated.
     * @return {String}
     */
    getUpdated() {
        return this.updated;
    }

    /**
     * Sets The time the asset status was last updated.
     * @param {String} updated The time the asset status was last updated.
     */
    setUpdated(updated) {
        this['updated'] = updated;
        return this;
    }

}

GeneratedAssetResponseAttributes.RequiredProperties = ["owner", "provider", "type", "status", "created", "updated"];

/**
 * The owner id of the asset.
 * @member {String} owner
 */
GeneratedAssetResponseAttributes.prototype['owner'] = undefined;

/**
 * The native or third party provider that generated the asset, `shotstack`, `elevenlabs`, `heygen` or `d-id`.
 * @member {module:model/GeneratedAssetResponseAttributes.ProviderEnum} provider
 */
GeneratedAssetResponseAttributes.prototype['provider'] = undefined;

/**
 * The type of service used to generate the asset, `text-to-speech` or `text-to-avatar`.
 * @member {module:model/GeneratedAssetResponseAttributes.TypeEnum} type
 */
GeneratedAssetResponseAttributes.prototype['type'] = undefined;

/**
 * The URL of the asset file hosted by Shotstack. The file at the URL can be used by the Edit API. Generated asset file URL's consist of a base URL (AWS bucket), owner id, asset id and extension. The extension varies depending on the type of file generated.
 * @member {String} url
 */
GeneratedAssetResponseAttributes.prototype['url'] = undefined;

/**
 * The status of the asset file generation task. <ul>   <li>`queued` - generation task is queued waiting to be processed</li>   <li>`processing` - the asset is being generated by the provider</li>   <li>`saving` - the asset is being saved to Shotstack</li>   <li>`done` - the asset has been generated and stored</li>   <li>`failed` - there was an error generating the asset</li> </ul>
 * @member {module:model/GeneratedAssetResponseAttributes.StatusEnum} status
 */
GeneratedAssetResponseAttributes.prototype['status'] = undefined;

/**
 * The time the generate asset task was initially queued.
 * @member {String} created
 */
GeneratedAssetResponseAttributes.prototype['created'] = undefined;

/**
 * The time the asset status was last updated.
 * @member {String} updated
 */
GeneratedAssetResponseAttributes.prototype['updated'] = undefined;





/**
 * Allowed values for the <code>provider</code> property.
 * @enum {String}
 * @readonly
 */
GeneratedAssetResponseAttributes['ProviderEnum'] = {

    /**
     * value: "shotstack"
     * @const
     */
    "shotstack": "shotstack",

    /**
     * value: "elevenlabs"
     * @const
     */
    "elevenlabs": "elevenlabs",

    /**
     * value: "heygen"
     * @const
     */
    "heygen": "heygen",

    /**
     * value: "d-id"
     * @const
     */
    "d-id": "d-id"
};


/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
GeneratedAssetResponseAttributes['TypeEnum'] = {

    /**
     * value: "text-to-speech"
     * @const
     */
    "speech": "text-to-speech",

    /**
     * value: "text-to-avatar"
     * @const
     */
    "avatar": "text-to-avatar"
};


/**
 * Allowed values for the <code>status</code> property.
 * @enum {String}
 * @readonly
 */
GeneratedAssetResponseAttributes['StatusEnum'] = {

    /**
     * value: "queued"
     * @const
     */
    "queued": "queued",

    /**
     * value: "processing"
     * @const
     */
    "processing": "processing",

    /**
     * value: "saving"
     * @const
     */
    "saving": "saving",

    /**
     * value: "done"
     * @const
     */
    "done": "done",

    /**
     * value: "failed"
     * @const
     */
    "failed": "failed"
};



export default GeneratedAssetResponseAttributes;


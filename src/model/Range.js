/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The Range model module.
 * @module model/Range
 * @version 0.2.6
 */
class Range {
    /**
     * Constructs a new <code>Range</code>.
     * Specify a time range to render, i.e. to render only a portion of a video or audio file. Omit this setting to  export the entire video. Range can also be used to render a frame at a specific time point - setting a range and output format as &#x60;jpg&#x60; will output a single frame image at the range &#x60;start&#x60; point.
     * @alias module:model/Range
     */
    constructor() { 
        
        Range.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>Range</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/Range} obj Optional instance to populate.
     * @return {module:model/Range} The populated <code>Range</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new Range();

            if (data.hasOwnProperty('start')) {
                obj['start'] = ApiClient.convertToType(data['start'], 'Number');
            }
            if (data.hasOwnProperty('length')) {
                obj['length'] = ApiClient.convertToType(data['length'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>Range</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>Range</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * Returns The point on the timeline, in seconds, to start the render from - i.e. start at second 3.
     * minimum: 0
     * @return {Number}
     */
    getStart() {
        return this.start;
    }

    /**
     * Sets The point on the timeline, in seconds, to start the render from - i.e. start at second 3.
     * @param {Number} start The point on the timeline, in seconds, to start the render from - i.e. start at second 3.
     */
    setStart(start) {
        this['start'] = start;
        return this;
    }
/**
     * Returns The length of the portion of the video or audio to render - i.e. render 6 seconds of the video.
     * minimum: 0
     * @return {Number}
     */
    getLength() {
        return this.length;
    }

    /**
     * Sets The length of the portion of the video or audio to render - i.e. render 6 seconds of the video.
     * @param {Number} length The length of the portion of the video or audio to render - i.e. render 6 seconds of the video.
     */
    setLength(length) {
        this['length'] = length;
        return this;
    }

}



/**
 * The point on the timeline, in seconds, to start the render from - i.e. start at second 3.
 * @member {Number} start
 */
Range.prototype['start'] = undefined;

/**
 * The length of the portion of the video or audio to render - i.e. render 6 seconds of the video.
 * @member {Number} length
 */
Range.prototype['length'] = undefined;






export default Range;


/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.io/docs/guide/) documentation.  There are three API's, one for editing and generating assets (Edit API), one for managing hosted assets (Serve API) and one for ingesting and transforming source assets (Ingest API).  Each API has it's own base URL and collection of endpoints. Each API uses the same set of API keys.  **[Edit API](#shotstack-edit)** - [https://api.shotstack.io/edit/{version}](#)<br> Edit videos, images and audio assets in the cloud using a simple JSON schema and templates.  **[Serve API](#shotstack-serve)** - [https://api.shotstack.io/serve/{version}](#)<br> Inspect and manage the hosting of assets generated by the Edit and Ingest APIs.  **[Ingest API](#shotstack-ingest)** - [https://api.shotstack.io/ingest/{version}](#)<br> Ingest (upload, store and transform) source footage, images, audio and fonts to be used by the Edit API.  **[Create API](#shotstack-create)** - [https://api.shotstack.io/create/{version}](#)<br> Generate images, videos, voice overs and text using built in and third party generative AI providers. 
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The ShotstackTextToSpeechOptions model module.
 * @module model/ShotstackTextToSpeechOptions
 * @version 0.2.6
 */
class ShotstackTextToSpeechOptions {
    /**
     * Constructs a new <code>ShotstackTextToSpeechOptions</code>.
     * Options for the Shotstack text-to-speech service. Set the text to be converted to speech and choose a voice to set the speaking style. The output will be generated as an MP3 audio file available at the URL returned in the response.
     * @alias module:model/ShotstackTextToSpeechOptions
     * @param type {module:model/ShotstackTextToSpeechOptions.TypeEnum} The type of asset to generate - set to `text-to-speech` for text-to-speech.
     * @param text {String} The text to convert to speech.
     * @param voice {module:model/ShotstackTextToSpeechOptions.VoiceEnum} The voice to use for the text-to-speech conversion. You must pair the correct voice with the correct language. For each language there is a language code that must be set in the `language` property. The voice must be available for the language code or the conversion will fail. i.e. To use the voice `Zeina` for Arabic you must set the `language` to `arb`. Select a voice from the list of available voices, the language code is in brackets: <ul>   <li>Arabic - Gulf (ar-AE)</li>   <ul>     <li>`Hala`</li>   </ul>   <li>Dutch - Belgian (nl-BE)</li>   <ul>     <li>`Lisa`</li>   </ul>   <li>Catalan (ca-ES)</li>   <ul>     <li>`Arlet`</li>   </ul>   <li>Chinese - Cantonese (yue-CN)</li>   <ul>     <li>`Hiujin`</li>   </ul>   <li>Chinese - Mandarin (cmn-CN)</li>   <ul>     <li>`Zhiyu`</li>   </ul>   <li>Danish (da-DK)</li>   <ul>     <li>`Sofie`</li>   </ul>   <li>Dutch (nl-NL)</li>   <ul>     <li>`Laura`</li>   </ul>   <li>English - Australian (en-AU)</li>   <ul>     <li>`Olivia`</li>   </ul>   <li>English - British (en-GB)</li>   <ul>     <li>`Amy`</li>     <li>`Emma`</li>     <li>`Brian`</li>     <li>`Arthur`</li>   </ul>   <li>English - Indian (en-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>English - Ireland (en-IE)</li>   <ul>     <li>`Niamh`</li>   </ul>   <li>English - New Zealand (en-NZ)</li>   <ul>     <li>`Aria`</li>   </ul>   <li>English - South African (en-ZA)</li>   <ul>     <li>`Ayanda`</li>   </ul>   <li>English - US (en-US)</li>   <ul>     <li>`Ivy`</li>     <li>`Joanna`</li>     <li>`Kendra`</li>     <li>`Kimberly`</li>     <li>`Salli`</li>     <li>`Joey`</li>     <li>`Justin`</li>     <li>`Kevin`</li>     <li>`Matthew`</li>     <li>`Ruth`</li>     <li>`Stephen`</li>   </ul>   <li>Finnish (fi-FI)</li>   <ul>     <li>`Suvi`</li>   </ul>   <li>French (fr-FR)</li>   <ul>     <li>`Léa`</li>     <li>`Rémi`</li>   </ul>   <li>French - Canadian (fr-CA)</li>   <ul>     <li>`Gabrielle`</li>     <li>`Liam`</li>   </ul>   <li>German (de-DE)</li>   <ul>     <li>`Vicki`</li>     <li>`Daniel`</li>   </ul>   <li>German - Austrian (de-AT)</li>   <ul>     <li>`Hannah`</li>   </ul>   <li>Hindi (hi-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>Italian (it-IT)</li>   <ul>     <li>`Bianca`</li>     <li>`Adriano`</li>   </ul>   <li>Japanese (ja-JP)</li>   <ul>     <li>`Takumi`</li>     <li>`Kazuha`</li>     <li>`Tomoko`</li>   </ul>   <li>Korean (ko-KR)</li>   <ul>     <li>`Seoyeon`</li>   </ul>   <li>Norwegian (nb-NO)</li>   <ul>     <li>`Ida`</li>   </ul>   <li>Polish (pl-PL)</li>   <ul>     <li>`Ola`</li>   </ul>   <li>Portuguese - Brazilian (pt-BR)</li>   <ul>     <li>`Camila`</li>     <li>`Vitória` or `Vitoria`</li>     <li>`Thiago`</li>   </ul>   <li>Portuguese - European (pt-PT)</li>   <ul>     <li>`Inês` or `Ines`</li>   </ul>   <li>Spanish (es-ES)</li>   <ul>     <li>`Lucia`</li>     <li>`Sergio`</li>   </ul>   <li>Spanish - Mexican (es-MX)</li>   <ul>     <li>`Mia`</li>     <li>`Andrés`</li>   </ul>   <li>Spanish - US (es-US)</li>   <ul>     <li>`Lupe`</li>     <li>`Pedro`</li>   </ul>   <li>Swedish (sv-SE)</li>   <ul>     <li>`Elin`</li>   </ul> </ul>
     */
    constructor(type, text, voice) { 
        
        ShotstackTextToSpeechOptions.initialize(this, type, text, voice);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, type, text, voice) { 
        obj['type'] = type || 'text-to-speech';
        obj['text'] = text;
        obj['voice'] = voice;
    }

    /**
     * Constructs a <code>ShotstackTextToSpeechOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/ShotstackTextToSpeechOptions} obj Optional instance to populate.
     * @return {module:model/ShotstackTextToSpeechOptions} The populated <code>ShotstackTextToSpeechOptions</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new ShotstackTextToSpeechOptions();

            if (data.hasOwnProperty('type')) {
                obj['type'] = ApiClient.convertToType(data['type'], 'String');
            }
            if (data.hasOwnProperty('text')) {
                obj['text'] = ApiClient.convertToType(data['text'], 'String');
            }
            if (data.hasOwnProperty('voice')) {
                obj['voice'] = ApiClient.convertToType(data['voice'], 'String');
            }
            if (data.hasOwnProperty('language')) {
                obj['language'] = ApiClient.convertToType(data['language'], 'String');
            }
            if (data.hasOwnProperty('newscaster')) {
                obj['newscaster'] = ApiClient.convertToType(data['newscaster'], 'Boolean');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>ShotstackTextToSpeechOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>ShotstackTextToSpeechOptions</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of ShotstackTextToSpeechOptions.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
            throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
        }
        // ensure the json data is a string
        if (data['text'] && !(typeof data['text'] === 'string' || data['text'] instanceof String)) {
            throw new Error("Expected the field `text` to be a primitive type in the JSON string but got " + data['text']);
        }
        // ensure the json data is a string
        if (data['voice'] && !(typeof data['voice'] === 'string' || data['voice'] instanceof String)) {
            throw new Error("Expected the field `voice` to be a primitive type in the JSON string but got " + data['voice']);
        }
        // ensure the json data is a string
        if (data['language'] && !(typeof data['language'] === 'string' || data['language'] instanceof String)) {
            throw new Error("Expected the field `language` to be a primitive type in the JSON string but got " + data['language']);
        }

        return true;
    }

/**
     * Returns The type of asset to generate - set to `text-to-speech` for text-to-speech.
     * @return {module:model/ShotstackTextToSpeechOptions.TypeEnum}
     */
    getType() {
        return this.type;
    }

    /**
     * Sets The type of asset to generate - set to `text-to-speech` for text-to-speech.
     * @param {module:model/ShotstackTextToSpeechOptions.TypeEnum} type The type of asset to generate - set to `text-to-speech` for text-to-speech.
     */
    setType(type) {
        this['type'] = type;
        return this;
    }
/**
     * Returns The text to convert to speech.
     * @return {String}
     */
    getText() {
        return this.text;
    }

    /**
     * Sets The text to convert to speech.
     * @param {String} text The text to convert to speech.
     */
    setText(text) {
        this['text'] = text;
        return this;
    }
/**
     * Returns The voice to use for the text-to-speech conversion. You must pair the correct voice with the correct language. For each language there is a language code that must be set in the `language` property. The voice must be available for the language code or the conversion will fail. i.e. To use the voice `Zeina` for Arabic you must set the `language` to `arb`. Select a voice from the list of available voices, the language code is in brackets: <ul>   <li>Arabic - Gulf (ar-AE)</li>   <ul>     <li>`Hala`</li>   </ul>   <li>Dutch - Belgian (nl-BE)</li>   <ul>     <li>`Lisa`</li>   </ul>   <li>Catalan (ca-ES)</li>   <ul>     <li>`Arlet`</li>   </ul>   <li>Chinese - Cantonese (yue-CN)</li>   <ul>     <li>`Hiujin`</li>   </ul>   <li>Chinese - Mandarin (cmn-CN)</li>   <ul>     <li>`Zhiyu`</li>   </ul>   <li>Danish (da-DK)</li>   <ul>     <li>`Sofie`</li>   </ul>   <li>Dutch (nl-NL)</li>   <ul>     <li>`Laura`</li>   </ul>   <li>English - Australian (en-AU)</li>   <ul>     <li>`Olivia`</li>   </ul>   <li>English - British (en-GB)</li>   <ul>     <li>`Amy`</li>     <li>`Emma`</li>     <li>`Brian`</li>     <li>`Arthur`</li>   </ul>   <li>English - Indian (en-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>English - Ireland (en-IE)</li>   <ul>     <li>`Niamh`</li>   </ul>   <li>English - New Zealand (en-NZ)</li>   <ul>     <li>`Aria`</li>   </ul>   <li>English - South African (en-ZA)</li>   <ul>     <li>`Ayanda`</li>   </ul>   <li>English - US (en-US)</li>   <ul>     <li>`Ivy`</li>     <li>`Joanna`</li>     <li>`Kendra`</li>     <li>`Kimberly`</li>     <li>`Salli`</li>     <li>`Joey`</li>     <li>`Justin`</li>     <li>`Kevin`</li>     <li>`Matthew`</li>     <li>`Ruth`</li>     <li>`Stephen`</li>   </ul>   <li>Finnish (fi-FI)</li>   <ul>     <li>`Suvi`</li>   </ul>   <li>French (fr-FR)</li>   <ul>     <li>`Léa`</li>     <li>`Rémi`</li>   </ul>   <li>French - Canadian (fr-CA)</li>   <ul>     <li>`Gabrielle`</li>     <li>`Liam`</li>   </ul>   <li>German (de-DE)</li>   <ul>     <li>`Vicki`</li>     <li>`Daniel`</li>   </ul>   <li>German - Austrian (de-AT)</li>   <ul>     <li>`Hannah`</li>   </ul>   <li>Hindi (hi-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>Italian (it-IT)</li>   <ul>     <li>`Bianca`</li>     <li>`Adriano`</li>   </ul>   <li>Japanese (ja-JP)</li>   <ul>     <li>`Takumi`</li>     <li>`Kazuha`</li>     <li>`Tomoko`</li>   </ul>   <li>Korean (ko-KR)</li>   <ul>     <li>`Seoyeon`</li>   </ul>   <li>Norwegian (nb-NO)</li>   <ul>     <li>`Ida`</li>   </ul>   <li>Polish (pl-PL)</li>   <ul>     <li>`Ola`</li>   </ul>   <li>Portuguese - Brazilian (pt-BR)</li>   <ul>     <li>`Camila`</li>     <li>`Vitória` or `Vitoria`</li>     <li>`Thiago`</li>   </ul>   <li>Portuguese - European (pt-PT)</li>   <ul>     <li>`Inês` or `Ines`</li>   </ul>   <li>Spanish (es-ES)</li>   <ul>     <li>`Lucia`</li>     <li>`Sergio`</li>   </ul>   <li>Spanish - Mexican (es-MX)</li>   <ul>     <li>`Mia`</li>     <li>`Andrés`</li>   </ul>   <li>Spanish - US (es-US)</li>   <ul>     <li>`Lupe`</li>     <li>`Pedro`</li>   </ul>   <li>Swedish (sv-SE)</li>   <ul>     <li>`Elin`</li>   </ul> </ul>
     * @return {module:model/ShotstackTextToSpeechOptions.VoiceEnum}
     */
    getVoice() {
        return this.voice;
    }

    /**
     * Sets The voice to use for the text-to-speech conversion. You must pair the correct voice with the correct language. For each language there is a language code that must be set in the `language` property. The voice must be available for the language code or the conversion will fail. i.e. To use the voice `Zeina` for Arabic you must set the `language` to `arb`. Select a voice from the list of available voices, the language code is in brackets: <ul>   <li>Arabic - Gulf (ar-AE)</li>   <ul>     <li>`Hala`</li>   </ul>   <li>Dutch - Belgian (nl-BE)</li>   <ul>     <li>`Lisa`</li>   </ul>   <li>Catalan (ca-ES)</li>   <ul>     <li>`Arlet`</li>   </ul>   <li>Chinese - Cantonese (yue-CN)</li>   <ul>     <li>`Hiujin`</li>   </ul>   <li>Chinese - Mandarin (cmn-CN)</li>   <ul>     <li>`Zhiyu`</li>   </ul>   <li>Danish (da-DK)</li>   <ul>     <li>`Sofie`</li>   </ul>   <li>Dutch (nl-NL)</li>   <ul>     <li>`Laura`</li>   </ul>   <li>English - Australian (en-AU)</li>   <ul>     <li>`Olivia`</li>   </ul>   <li>English - British (en-GB)</li>   <ul>     <li>`Amy`</li>     <li>`Emma`</li>     <li>`Brian`</li>     <li>`Arthur`</li>   </ul>   <li>English - Indian (en-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>English - Ireland (en-IE)</li>   <ul>     <li>`Niamh`</li>   </ul>   <li>English - New Zealand (en-NZ)</li>   <ul>     <li>`Aria`</li>   </ul>   <li>English - South African (en-ZA)</li>   <ul>     <li>`Ayanda`</li>   </ul>   <li>English - US (en-US)</li>   <ul>     <li>`Ivy`</li>     <li>`Joanna`</li>     <li>`Kendra`</li>     <li>`Kimberly`</li>     <li>`Salli`</li>     <li>`Joey`</li>     <li>`Justin`</li>     <li>`Kevin`</li>     <li>`Matthew`</li>     <li>`Ruth`</li>     <li>`Stephen`</li>   </ul>   <li>Finnish (fi-FI)</li>   <ul>     <li>`Suvi`</li>   </ul>   <li>French (fr-FR)</li>   <ul>     <li>`Léa`</li>     <li>`Rémi`</li>   </ul>   <li>French - Canadian (fr-CA)</li>   <ul>     <li>`Gabrielle`</li>     <li>`Liam`</li>   </ul>   <li>German (de-DE)</li>   <ul>     <li>`Vicki`</li>     <li>`Daniel`</li>   </ul>   <li>German - Austrian (de-AT)</li>   <ul>     <li>`Hannah`</li>   </ul>   <li>Hindi (hi-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>Italian (it-IT)</li>   <ul>     <li>`Bianca`</li>     <li>`Adriano`</li>   </ul>   <li>Japanese (ja-JP)</li>   <ul>     <li>`Takumi`</li>     <li>`Kazuha`</li>     <li>`Tomoko`</li>   </ul>   <li>Korean (ko-KR)</li>   <ul>     <li>`Seoyeon`</li>   </ul>   <li>Norwegian (nb-NO)</li>   <ul>     <li>`Ida`</li>   </ul>   <li>Polish (pl-PL)</li>   <ul>     <li>`Ola`</li>   </ul>   <li>Portuguese - Brazilian (pt-BR)</li>   <ul>     <li>`Camila`</li>     <li>`Vitória` or `Vitoria`</li>     <li>`Thiago`</li>   </ul>   <li>Portuguese - European (pt-PT)</li>   <ul>     <li>`Inês` or `Ines`</li>   </ul>   <li>Spanish (es-ES)</li>   <ul>     <li>`Lucia`</li>     <li>`Sergio`</li>   </ul>   <li>Spanish - Mexican (es-MX)</li>   <ul>     <li>`Mia`</li>     <li>`Andrés`</li>   </ul>   <li>Spanish - US (es-US)</li>   <ul>     <li>`Lupe`</li>     <li>`Pedro`</li>   </ul>   <li>Swedish (sv-SE)</li>   <ul>     <li>`Elin`</li>   </ul> </ul>
     * @param {module:model/ShotstackTextToSpeechOptions.VoiceEnum} voice The voice to use for the text-to-speech conversion. You must pair the correct voice with the correct language. For each language there is a language code that must be set in the `language` property. The voice must be available for the language code or the conversion will fail. i.e. To use the voice `Zeina` for Arabic you must set the `language` to `arb`. Select a voice from the list of available voices, the language code is in brackets: <ul>   <li>Arabic - Gulf (ar-AE)</li>   <ul>     <li>`Hala`</li>   </ul>   <li>Dutch - Belgian (nl-BE)</li>   <ul>     <li>`Lisa`</li>   </ul>   <li>Catalan (ca-ES)</li>   <ul>     <li>`Arlet`</li>   </ul>   <li>Chinese - Cantonese (yue-CN)</li>   <ul>     <li>`Hiujin`</li>   </ul>   <li>Chinese - Mandarin (cmn-CN)</li>   <ul>     <li>`Zhiyu`</li>   </ul>   <li>Danish (da-DK)</li>   <ul>     <li>`Sofie`</li>   </ul>   <li>Dutch (nl-NL)</li>   <ul>     <li>`Laura`</li>   </ul>   <li>English - Australian (en-AU)</li>   <ul>     <li>`Olivia`</li>   </ul>   <li>English - British (en-GB)</li>   <ul>     <li>`Amy`</li>     <li>`Emma`</li>     <li>`Brian`</li>     <li>`Arthur`</li>   </ul>   <li>English - Indian (en-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>English - Ireland (en-IE)</li>   <ul>     <li>`Niamh`</li>   </ul>   <li>English - New Zealand (en-NZ)</li>   <ul>     <li>`Aria`</li>   </ul>   <li>English - South African (en-ZA)</li>   <ul>     <li>`Ayanda`</li>   </ul>   <li>English - US (en-US)</li>   <ul>     <li>`Ivy`</li>     <li>`Joanna`</li>     <li>`Kendra`</li>     <li>`Kimberly`</li>     <li>`Salli`</li>     <li>`Joey`</li>     <li>`Justin`</li>     <li>`Kevin`</li>     <li>`Matthew`</li>     <li>`Ruth`</li>     <li>`Stephen`</li>   </ul>   <li>Finnish (fi-FI)</li>   <ul>     <li>`Suvi`</li>   </ul>   <li>French (fr-FR)</li>   <ul>     <li>`Léa`</li>     <li>`Rémi`</li>   </ul>   <li>French - Canadian (fr-CA)</li>   <ul>     <li>`Gabrielle`</li>     <li>`Liam`</li>   </ul>   <li>German (de-DE)</li>   <ul>     <li>`Vicki`</li>     <li>`Daniel`</li>   </ul>   <li>German - Austrian (de-AT)</li>   <ul>     <li>`Hannah`</li>   </ul>   <li>Hindi (hi-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>Italian (it-IT)</li>   <ul>     <li>`Bianca`</li>     <li>`Adriano`</li>   </ul>   <li>Japanese (ja-JP)</li>   <ul>     <li>`Takumi`</li>     <li>`Kazuha`</li>     <li>`Tomoko`</li>   </ul>   <li>Korean (ko-KR)</li>   <ul>     <li>`Seoyeon`</li>   </ul>   <li>Norwegian (nb-NO)</li>   <ul>     <li>`Ida`</li>   </ul>   <li>Polish (pl-PL)</li>   <ul>     <li>`Ola`</li>   </ul>   <li>Portuguese - Brazilian (pt-BR)</li>   <ul>     <li>`Camila`</li>     <li>`Vitória` or `Vitoria`</li>     <li>`Thiago`</li>   </ul>   <li>Portuguese - European (pt-PT)</li>   <ul>     <li>`Inês` or `Ines`</li>   </ul>   <li>Spanish (es-ES)</li>   <ul>     <li>`Lucia`</li>     <li>`Sergio`</li>   </ul>   <li>Spanish - Mexican (es-MX)</li>   <ul>     <li>`Mia`</li>     <li>`Andrés`</li>   </ul>   <li>Spanish - US (es-US)</li>   <ul>     <li>`Lupe`</li>     <li>`Pedro`</li>   </ul>   <li>Swedish (sv-SE)</li>   <ul>     <li>`Elin`</li>   </ul> </ul>
     */
    setVoice(voice) {
        this['voice'] = voice;
        return this;
    }
/**
     * Returns The language code for the text-to-speech conversion. You must pair the correct language with the correct voice (see voice parameter above). Select a language from the list of available languages: <ul>   <li>`cmn-CN`</li>   <li>`da-DK`</li>   <li>`de-DE`</li>   <li>`en-AU`</li>   <li>`en-GB`</li>   <li>`en-IN`</li>   <li>`en-US`</li>   <li>`es-ES`</li>   <li>`es-MX`</li>   <li>`es-US`</li>   <li>`fr-CA`</li>   <li>`fr-FR`</li>   <li>`it-IT`</li>   <li>`ja-JP`</li>   <li>`hi-IN`</li>   <li>`ko-KR`</li>   <li>`nb-NO`</li>   <li>`nl-NL`</li>   <li>`pl-PL`</li>   <li>`pt-BR`</li>   <li>`pt-PT`</li>   <li>`sv-SE`</li>   <li>`en-NZ`</li>   <li>`en-ZA`</li>   <li>`ca-ES`</li>   <li>`de-AT`</li>   <li>`yue-CN`</li>   <li>`ar-AE`</li>   <li>`fi-FI`</li> </ul>
     * @return {module:model/ShotstackTextToSpeechOptions.LanguageEnum}
     */
    getLanguage() {
        return this.language;
    }

    /**
     * Sets The language code for the text-to-speech conversion. You must pair the correct language with the correct voice (see voice parameter above). Select a language from the list of available languages: <ul>   <li>`cmn-CN`</li>   <li>`da-DK`</li>   <li>`de-DE`</li>   <li>`en-AU`</li>   <li>`en-GB`</li>   <li>`en-IN`</li>   <li>`en-US`</li>   <li>`es-ES`</li>   <li>`es-MX`</li>   <li>`es-US`</li>   <li>`fr-CA`</li>   <li>`fr-FR`</li>   <li>`it-IT`</li>   <li>`ja-JP`</li>   <li>`hi-IN`</li>   <li>`ko-KR`</li>   <li>`nb-NO`</li>   <li>`nl-NL`</li>   <li>`pl-PL`</li>   <li>`pt-BR`</li>   <li>`pt-PT`</li>   <li>`sv-SE`</li>   <li>`en-NZ`</li>   <li>`en-ZA`</li>   <li>`ca-ES`</li>   <li>`de-AT`</li>   <li>`yue-CN`</li>   <li>`ar-AE`</li>   <li>`fi-FI`</li> </ul>
     * @param {module:model/ShotstackTextToSpeechOptions.LanguageEnum} language The language code for the text-to-speech conversion. You must pair the correct language with the correct voice (see voice parameter above). Select a language from the list of available languages: <ul>   <li>`cmn-CN`</li>   <li>`da-DK`</li>   <li>`de-DE`</li>   <li>`en-AU`</li>   <li>`en-GB`</li>   <li>`en-IN`</li>   <li>`en-US`</li>   <li>`es-ES`</li>   <li>`es-MX`</li>   <li>`es-US`</li>   <li>`fr-CA`</li>   <li>`fr-FR`</li>   <li>`it-IT`</li>   <li>`ja-JP`</li>   <li>`hi-IN`</li>   <li>`ko-KR`</li>   <li>`nb-NO`</li>   <li>`nl-NL`</li>   <li>`pl-PL`</li>   <li>`pt-BR`</li>   <li>`pt-PT`</li>   <li>`sv-SE`</li>   <li>`en-NZ`</li>   <li>`en-ZA`</li>   <li>`ca-ES`</li>   <li>`de-AT`</li>   <li>`yue-CN`</li>   <li>`ar-AE`</li>   <li>`fi-FI`</li> </ul>
     */
    setLanguage(language) {
        this['language'] = language;
        return this;
    }
/**
     * Returns Set the voice to newscaster mode.<br /><br /> *Only Matthew and Joanna for US English (en-US), Lupe for US Spanish (es-US), and Amy for British English (en-GB) are available in the newscaster voice.
     * @return {Boolean}
     */
    getNewscaster() {
        return this.newscaster;
    }

    /**
     * Sets Set the voice to newscaster mode.<br /><br /> *Only Matthew and Joanna for US English (en-US), Lupe for US Spanish (es-US), and Amy for British English (en-GB) are available in the newscaster voice.
     * @param {Boolean} newscaster Set the voice to newscaster mode.<br /><br /> *Only Matthew and Joanna for US English (en-US), Lupe for US Spanish (es-US), and Amy for British English (en-GB) are available in the newscaster voice.
     */
    setNewscaster(newscaster) {
        this['newscaster'] = newscaster;
        return this;
    }

}

ShotstackTextToSpeechOptions.RequiredProperties = ["type", "text", "voice"];

/**
 * The type of asset to generate - set to `text-to-speech` for text-to-speech.
 * @member {module:model/ShotstackTextToSpeechOptions.TypeEnum} type
 * @default 'text-to-speech'
 */
ShotstackTextToSpeechOptions.prototype['type'] = 'text-to-speech';

/**
 * The text to convert to speech.
 * @member {String} text
 */
ShotstackTextToSpeechOptions.prototype['text'] = undefined;

/**
 * The voice to use for the text-to-speech conversion. You must pair the correct voice with the correct language. For each language there is a language code that must be set in the `language` property. The voice must be available for the language code or the conversion will fail. i.e. To use the voice `Zeina` for Arabic you must set the `language` to `arb`. Select a voice from the list of available voices, the language code is in brackets: <ul>   <li>Arabic - Gulf (ar-AE)</li>   <ul>     <li>`Hala`</li>   </ul>   <li>Dutch - Belgian (nl-BE)</li>   <ul>     <li>`Lisa`</li>   </ul>   <li>Catalan (ca-ES)</li>   <ul>     <li>`Arlet`</li>   </ul>   <li>Chinese - Cantonese (yue-CN)</li>   <ul>     <li>`Hiujin`</li>   </ul>   <li>Chinese - Mandarin (cmn-CN)</li>   <ul>     <li>`Zhiyu`</li>   </ul>   <li>Danish (da-DK)</li>   <ul>     <li>`Sofie`</li>   </ul>   <li>Dutch (nl-NL)</li>   <ul>     <li>`Laura`</li>   </ul>   <li>English - Australian (en-AU)</li>   <ul>     <li>`Olivia`</li>   </ul>   <li>English - British (en-GB)</li>   <ul>     <li>`Amy`</li>     <li>`Emma`</li>     <li>`Brian`</li>     <li>`Arthur`</li>   </ul>   <li>English - Indian (en-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>English - Ireland (en-IE)</li>   <ul>     <li>`Niamh`</li>   </ul>   <li>English - New Zealand (en-NZ)</li>   <ul>     <li>`Aria`</li>   </ul>   <li>English - South African (en-ZA)</li>   <ul>     <li>`Ayanda`</li>   </ul>   <li>English - US (en-US)</li>   <ul>     <li>`Ivy`</li>     <li>`Joanna`</li>     <li>`Kendra`</li>     <li>`Kimberly`</li>     <li>`Salli`</li>     <li>`Joey`</li>     <li>`Justin`</li>     <li>`Kevin`</li>     <li>`Matthew`</li>     <li>`Ruth`</li>     <li>`Stephen`</li>   </ul>   <li>Finnish (fi-FI)</li>   <ul>     <li>`Suvi`</li>   </ul>   <li>French (fr-FR)</li>   <ul>     <li>`Léa`</li>     <li>`Rémi`</li>   </ul>   <li>French - Canadian (fr-CA)</li>   <ul>     <li>`Gabrielle`</li>     <li>`Liam`</li>   </ul>   <li>German (de-DE)</li>   <ul>     <li>`Vicki`</li>     <li>`Daniel`</li>   </ul>   <li>German - Austrian (de-AT)</li>   <ul>     <li>`Hannah`</li>   </ul>   <li>Hindi (hi-IN)</li>   <ul>     <li>`Kajal`</li>   </ul>   <li>Italian (it-IT)</li>   <ul>     <li>`Bianca`</li>     <li>`Adriano`</li>   </ul>   <li>Japanese (ja-JP)</li>   <ul>     <li>`Takumi`</li>     <li>`Kazuha`</li>     <li>`Tomoko`</li>   </ul>   <li>Korean (ko-KR)</li>   <ul>     <li>`Seoyeon`</li>   </ul>   <li>Norwegian (nb-NO)</li>   <ul>     <li>`Ida`</li>   </ul>   <li>Polish (pl-PL)</li>   <ul>     <li>`Ola`</li>   </ul>   <li>Portuguese - Brazilian (pt-BR)</li>   <ul>     <li>`Camila`</li>     <li>`Vitória` or `Vitoria`</li>     <li>`Thiago`</li>   </ul>   <li>Portuguese - European (pt-PT)</li>   <ul>     <li>`Inês` or `Ines`</li>   </ul>   <li>Spanish (es-ES)</li>   <ul>     <li>`Lucia`</li>     <li>`Sergio`</li>   </ul>   <li>Spanish - Mexican (es-MX)</li>   <ul>     <li>`Mia`</li>     <li>`Andrés`</li>   </ul>   <li>Spanish - US (es-US)</li>   <ul>     <li>`Lupe`</li>     <li>`Pedro`</li>   </ul>   <li>Swedish (sv-SE)</li>   <ul>     <li>`Elin`</li>   </ul> </ul>
 * @member {module:model/ShotstackTextToSpeechOptions.VoiceEnum} voice
 */
ShotstackTextToSpeechOptions.prototype['voice'] = undefined;

/**
 * The language code for the text-to-speech conversion. You must pair the correct language with the correct voice (see voice parameter above). Select a language from the list of available languages: <ul>   <li>`cmn-CN`</li>   <li>`da-DK`</li>   <li>`de-DE`</li>   <li>`en-AU`</li>   <li>`en-GB`</li>   <li>`en-IN`</li>   <li>`en-US`</li>   <li>`es-ES`</li>   <li>`es-MX`</li>   <li>`es-US`</li>   <li>`fr-CA`</li>   <li>`fr-FR`</li>   <li>`it-IT`</li>   <li>`ja-JP`</li>   <li>`hi-IN`</li>   <li>`ko-KR`</li>   <li>`nb-NO`</li>   <li>`nl-NL`</li>   <li>`pl-PL`</li>   <li>`pt-BR`</li>   <li>`pt-PT`</li>   <li>`sv-SE`</li>   <li>`en-NZ`</li>   <li>`en-ZA`</li>   <li>`ca-ES`</li>   <li>`de-AT`</li>   <li>`yue-CN`</li>   <li>`ar-AE`</li>   <li>`fi-FI`</li> </ul>
 * @member {module:model/ShotstackTextToSpeechOptions.LanguageEnum} language
 * @default 'en-US'
 */
ShotstackTextToSpeechOptions.prototype['language'] = 'en-US';

/**
 * Set the voice to newscaster mode.<br /><br /> *Only Matthew and Joanna for US English (en-US), Lupe for US Spanish (es-US), and Amy for British English (en-GB) are available in the newscaster voice.
 * @member {Boolean} newscaster
 * @default false
 */
ShotstackTextToSpeechOptions.prototype['newscaster'] = false;





/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
ShotstackTextToSpeechOptions['TypeEnum'] = {

    /**
     * value: "text-to-speech"
     * @const
     */
    "text-to-speech": "text-to-speech"
};


/**
 * Allowed values for the <code>voice</code> property.
 * @enum {String}
 * @readonly
 */
ShotstackTextToSpeechOptions['VoiceEnum'] = {

    /**
     * value: "Hala"
     * @const
     */
    "Hala": "Hala",

    /**
     * value: "Lisa"
     * @const
     */
    "Lisa": "Lisa",

    /**
     * value: "Arlet"
     * @const
     */
    "Arlet": "Arlet",

    /**
     * value: "Hiujin"
     * @const
     */
    "Hiujin": "Hiujin",

    /**
     * value: "Zhiyu"
     * @const
     */
    "Zhiyu": "Zhiyu",

    /**
     * value: "Sofie"
     * @const
     */
    "Sofie": "Sofie",

    /**
     * value: "Laura"
     * @const
     */
    "Laura": "Laura",

    /**
     * value: "Olivia"
     * @const
     */
    "Olivia": "Olivia",

    /**
     * value: "Amy"
     * @const
     */
    "Amy": "Amy",

    /**
     * value: "Emma"
     * @const
     */
    "Emma": "Emma",

    /**
     * value: "Brian"
     * @const
     */
    "Brian": "Brian",

    /**
     * value: "Arthur"
     * @const
     */
    "Arthur": "Arthur",

    /**
     * value: "Kajal"
     * @const
     */
    "Kajal": "Kajal",

    /**
     * value: "Niamh"
     * @const
     */
    "Niamh": "Niamh",

    /**
     * value: "Aria"
     * @const
     */
    "Aria": "Aria",

    /**
     * value: "Ayanda"
     * @const
     */
    "Ayanda": "Ayanda",

    /**
     * value: "Ivy"
     * @const
     */
    "Ivy": "Ivy",

    /**
     * value: "Joanna"
     * @const
     */
    "Joanna": "Joanna",

    /**
     * value: "Kendra"
     * @const
     */
    "Kendra": "Kendra",

    /**
     * value: "Kimberly"
     * @const
     */
    "Kimberly": "Kimberly",

    /**
     * value: "Salli"
     * @const
     */
    "Salli": "Salli",

    /**
     * value: "Joey"
     * @const
     */
    "Joey": "Joey",

    /**
     * value: "Justin"
     * @const
     */
    "Justin": "Justin",

    /**
     * value: "Kevin"
     * @const
     */
    "Kevin": "Kevin",

    /**
     * value: "Matthew"
     * @const
     */
    "Matthew": "Matthew",

    /**
     * value: "Ruth"
     * @const
     */
    "Ruth": "Ruth",

    /**
     * value: "Stephen"
     * @const
     */
    "Stephen": "Stephen",

    /**
     * value: "Suvi"
     * @const
     */
    "Suvi": "Suvi",

    /**
     * value: "Léa"
     * @const
     */
    "Léa": "Léa",

    /**
     * value: "Rémi"
     * @const
     */
    "Rémi": "Rémi",

    /**
     * value: "Gabrielle"
     * @const
     */
    "Gabrielle": "Gabrielle",

    /**
     * value: "Liam"
     * @const
     */
    "Liam": "Liam",

    /**
     * value: "Vicki"
     * @const
     */
    "Vicki": "Vicki",

    /**
     * value: "Daniel"
     * @const
     */
    "Daniel": "Daniel",

    /**
     * value: "Hannah"
     * @const
     */
    "Hannah": "Hannah",

    /**
     * value: "Kajal"
     * @const
     */
    "Kajal2": "Kajal",

    /**
     * value: "Bianca"
     * @const
     */
    "Bianca": "Bianca",

    /**
     * value: "Adriano"
     * @const
     */
    "Adriano": "Adriano",

    /**
     * value: "Takumi"
     * @const
     */
    "Takumi": "Takumi",

    /**
     * value: "Kazuha"
     * @const
     */
    "Kazuha": "Kazuha",

    /**
     * value: "Tomoko"
     * @const
     */
    "Tomoko": "Tomoko",

    /**
     * value: "Seoyeon"
     * @const
     */
    "Seoyeon": "Seoyeon",

    /**
     * value: "Ida"
     * @const
     */
    "Ida": "Ida",

    /**
     * value: "Ola"
     * @const
     */
    "Ola": "Ola",

    /**
     * value: "Camila"
     * @const
     */
    "Camila": "Camila",

    /**
     * value: "Vitória"
     * @const
     */
    "Vitória": "Vitória",

    /**
     * value: "Vitoria"
     * @const
     */
    "Vitoria": "Vitoria",

    /**
     * value: "Thiago"
     * @const
     */
    "Thiago": "Thiago",

    /**
     * value: "Inês"
     * @const
     */
    "Inês": "Inês",

    /**
     * value: "Ines"
     * @const
     */
    "Ines": "Ines",

    /**
     * value: "Lucia"
     * @const
     */
    "Lucia": "Lucia",

    /**
     * value: "Sergio"
     * @const
     */
    "Sergio": "Sergio",

    /**
     * value: "Mia"
     * @const
     */
    "Mia": "Mia",

    /**
     * value: "Andrés"
     * @const
     */
    "Andrés": "Andrés",

    /**
     * value: "Lupe"
     * @const
     */
    "Lupe": "Lupe",

    /**
     * value: "Pedro"
     * @const
     */
    "Pedro": "Pedro",

    /**
     * value: "Elin"
     * @const
     */
    "Elin": "Elin"
};


/**
 * Allowed values for the <code>language</code> property.
 * @enum {String}
 * @readonly
 */
ShotstackTextToSpeechOptions['LanguageEnum'] = {

    /**
     * value: "cmn-CN"
     * @const
     */
    "cmn-CN": "cmn-CN",

    /**
     * value: "da-DK"
     * @const
     */
    "da-DK": "da-DK",

    /**
     * value: "de-DE"
     * @const
     */
    "de-DE": "de-DE",

    /**
     * value: "en-AU"
     * @const
     */
    "en-AU": "en-AU",

    /**
     * value: "en-GB"
     * @const
     */
    "en-GB": "en-GB",

    /**
     * value: "en-IN"
     * @const
     */
    "en-IN": "en-IN",

    /**
     * value: "en-US"
     * @const
     */
    "en-US": "en-US",

    /**
     * value: "es-ES"
     * @const
     */
    "es-ES": "es-ES",

    /**
     * value: "es-MX"
     * @const
     */
    "es-MX": "es-MX",

    /**
     * value: "es-US"
     * @const
     */
    "es-US": "es-US",

    /**
     * value: "fr-CA"
     * @const
     */
    "fr-CA": "fr-CA",

    /**
     * value: "fr-FR"
     * @const
     */
    "fr-FR": "fr-FR",

    /**
     * value: "it-IT"
     * @const
     */
    "it-IT": "it-IT",

    /**
     * value: "ja-JP"
     * @const
     */
    "ja-JP": "ja-JP",

    /**
     * value: "hi-IN"
     * @const
     */
    "hi-IN": "hi-IN",

    /**
     * value: "ko-KR"
     * @const
     */
    "ko-KR": "ko-KR",

    /**
     * value: "nb-NO"
     * @const
     */
    "nb-NO": "nb-NO",

    /**
     * value: "nl-NL"
     * @const
     */
    "nl-NL": "nl-NL",

    /**
     * value: "pl-PL"
     * @const
     */
    "pl-PL": "pl-PL",

    /**
     * value: "pt-BR"
     * @const
     */
    "pt-BR": "pt-BR",

    /**
     * value: "pt-PT"
     * @const
     */
    "pt-PT": "pt-PT",

    /**
     * value: "sv-SE"
     * @const
     */
    "sv-SE": "sv-SE",

    /**
     * value: "en-NZ"
     * @const
     */
    "en-NZ": "en-NZ",

    /**
     * value: "en-ZA"
     * @const
     */
    "en-ZA": "en-ZA",

    /**
     * value: "ca-ES"
     * @const
     */
    "ca-ES": "ca-ES",

    /**
     * value: "de-AT"
     * @const
     */
    "de-AT": "de-AT",

    /**
     * value: "yue-CN"
     * @const
     */
    "yue-CN": "yue-CN",

    /**
     * value: "ar-AE"
     * @const
     */
    "ar-AE": "ar-AE",

    /**
     * value: "fi-FI"
     * @const
     */
    "fi-FI": "fi-FI"
};



export default ShotstackTextToSpeechOptions;


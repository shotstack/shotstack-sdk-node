/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Clip'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Clip'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.Track = factory(root.ShotstackSdk.ApiClient, root.ShotstackSdk.Clip);
  }
}(this, function(ApiClient, Clip) {
  'use strict';



  /**
   * The Track model module.
   * @module model/Track
   * @version v1
   */

  /**
   * Constructs a new <code>Track</code>.
   * A track contains an array of clips. Tracks are layered on top of each other in the order in the array. The top most track will render on top of those below it.
   * @alias module:model/Track
   * @class
   * @param clips {Array.<module:model/Clip>} An array of Clips comprising of TitleClip, ImageClip or VideoClip.
   */
  var exports = function(clips) {
    var _this = this;

    _this['clips'] = clips;
  };

  /**
   * Constructs a <code>Track</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/Track} obj Optional instance to populate.
   * @return {module:model/Track} The populated <code>Track</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('clips')) {
        obj['clips'] = ApiClient.convertToType(data['clips'], [Clip]);
      }
    }
    return obj;
  }

  /**
   * An array of Clips comprising of TitleClip, ImageClip or VideoClip.
   * @member {Array.<module:model/Clip>} clips
   */
  exports.prototype['clips'] = undefined;


  /**
   * Returns An array of Clips comprising of TitleClip, ImageClip or VideoClip.
   * @return {Array.<module:model/Clip>}
   */
  exports.prototype.getClips = function() {
    return this['clips'];
  }

  /**
   * Sets An array of Clips comprising of TitleClip, ImageClip or VideoClip.
   * @param {Array.<module:model/Clip>} clips An array of Clips comprising of TitleClip, ImageClip or VideoClip.
   */
  exports.prototype.setClips = function(clips) {
    this['clips'] = clips;
    return this;
  }



  return exports;
}));



"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
function _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { "default": obj }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _createForOfIteratorHelper(o, allowArrayLike) { var it = typeof Symbol !== "undefined" && o[Symbol.iterator] || o["@@iterator"]; if (!it) { if (Array.isArray(o) || (it = _unsupportedIterableToArray(o)) || allowArrayLike && o && typeof o.length === "number") { if (it) o = it; var i = 0; var F = function F() {}; return { s: F, n: function n() { if (i >= o.length) return { done: true }; return { done: false, value: o[i++] }; }, e: function e(_e) { throw _e; }, f: F }; } throw new TypeError("Invalid attempt to iterate non-iterable instance.\nIn order to be iterable, non-array objects must have a [Symbol.iterator]() method."); } var normalCompletion = true, didErr = false, err; return { s: function s() { it = it.call(o); }, n: function n() { var step = it.next(); normalCompletion = step.done; return step; }, e: function e(_e2) { didErr = true; err = _e2; }, f: function f() { try { if (!normalCompletion && it["return"] != null) it["return"](); } finally { if (didErr) throw err; } } }; }
function _unsupportedIterableToArray(o, minLen) { if (!o) return; if (typeof o === "string") return _arrayLikeToArray(o, minLen); var n = Object.prototype.toString.call(o).slice(8, -1); if (n === "Object" && o.constructor) n = o.constructor.name; if (n === "Map" || n === "Set") return Array.from(o); if (n === "Arguments" || /^(?:Ui|I)nt(?:8|16|32)(?:Clamped)?Array$/.test(n)) return _arrayLikeToArray(o, minLen); }
function _arrayLikeToArray(arr, len) { if (len == null || len > arr.length) len = arr.length; for (var i = 0, arr2 = new Array(len); i < len; i++) arr2[i] = arr[i]; return arr2; }
function _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError("Cannot call a class as a function"); } }
function _defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if ("value" in descriptor) descriptor.writable = true; Object.defineProperty(target, _toPropertyKey(descriptor.key), descriptor); } }
function _createClass(Constructor, protoProps, staticProps) { if (protoProps) _defineProperties(Constructor.prototype, protoProps); if (staticProps) _defineProperties(Constructor, staticProps); Object.defineProperty(Constructor, "prototype", { writable: false }); return Constructor; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
 * The StabilityAiTextToImageOptions model module.
 * @module model/StabilityAiTextToImageOptions
 * @version 0.2.6
 */
var StabilityAiTextToImageOptions = /*#__PURE__*/function () {
  /**
   * Constructs a new <code>StabilityAiTextToImageOptions</code>.
   * Options for the Stability AI text-to-image service. Set a text prompt to generate an image from plus other engine and configuration options. The output will be generated as a JPG file available at the URL returned in the response.
   * @alias module:model/StabilityAiTextToImageOptions
   * @param type {module:model/StabilityAiTextToImageOptions.TypeEnum} The type of asset to generate - set to `text-to-image` for text-to-image.
   * @param prompt {String} The text prompt to generate an image from.
   * @param width {Number} The width of the image in pixels. Must be divisible by 64.
   * @param height {Number} The height of the image in pixels. Must be divisible by 64.
   */
  function StabilityAiTextToImageOptions(type, prompt, width, height) {
    _classCallCheck(this, StabilityAiTextToImageOptions);
    StabilityAiTextToImageOptions.initialize(this, type, prompt, width, height);
  }

  /**
   * Initializes the fields of this object.
   * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
   * Only for internal use.
   */
  return _createClass(StabilityAiTextToImageOptions, [{
    key: "getType",
    value:
    /**
         * Returns The type of asset to generate - set to `text-to-image` for text-to-image.
         * @return {module:model/StabilityAiTextToImageOptions.TypeEnum}
         */
    function getType() {
      return this.type;
    }

    /**
     * Sets The type of asset to generate - set to `text-to-image` for text-to-image.
     * @param {module:model/StabilityAiTextToImageOptions.TypeEnum} type The type of asset to generate - set to `text-to-image` for text-to-image.
     */
  }, {
    key: "setType",
    value: function setType(type) {
      this['type'] = type;
      return this;
    }
    /**
         * Returns The text prompt to generate an image from.
         * @return {String}
         */
  }, {
    key: "getPrompt",
    value: function getPrompt() {
      return this.prompt;
    }

    /**
     * Sets The text prompt to generate an image from.
     * @param {String} prompt The text prompt to generate an image from.
     */
  }, {
    key: "setPrompt",
    value: function setPrompt(prompt) {
      this['prompt'] = prompt;
      return this;
    }
    /**
         * Returns The engine (model) to use for generating the image. Select from the list of available engines: <ul>   <li>`stable-diffusion-xl-1024-v0-9`</li>   <li>`stable-diffusion-xl-1024-v1-0`</li>   <li>`stable-diffusion-v1-6`</li>   <li>`stable-diffusion-512-v2-1`</li>   <li>`stable-diffusion-xl-beta-v2-2-2`</li> </ul>
         * @return {module:model/StabilityAiTextToImageOptions.EngineEnum}
         */
  }, {
    key: "getEngine",
    value: function getEngine() {
      return this.engine;
    }

    /**
     * Sets The engine (model) to use for generating the image. Select from the list of available engines: <ul>   <li>`stable-diffusion-xl-1024-v0-9`</li>   <li>`stable-diffusion-xl-1024-v1-0`</li>   <li>`stable-diffusion-v1-6`</li>   <li>`stable-diffusion-512-v2-1`</li>   <li>`stable-diffusion-xl-beta-v2-2-2`</li> </ul>
     * @param {module:model/StabilityAiTextToImageOptions.EngineEnum} engine The engine (model) to use for generating the image. Select from the list of available engines: <ul>   <li>`stable-diffusion-xl-1024-v0-9`</li>   <li>`stable-diffusion-xl-1024-v1-0`</li>   <li>`stable-diffusion-v1-6`</li>   <li>`stable-diffusion-512-v2-1`</li>   <li>`stable-diffusion-xl-beta-v2-2-2`</li> </ul>
     */
  }, {
    key: "setEngine",
    value: function setEngine(engine) {
      this['engine'] = engine;
      return this;
    }
    /**
         * Returns The width of the image in pixels. Must be divisible by 64.
         * @return {Number}
         */
  }, {
    key: "getWidth",
    value: function getWidth() {
      return this.width;
    }

    /**
     * Sets The width of the image in pixels. Must be divisible by 64.
     * @param {Number} width The width of the image in pixels. Must be divisible by 64.
     */
  }, {
    key: "setWidth",
    value: function setWidth(width) {
      this['width'] = width;
      return this;
    }
    /**
         * Returns The height of the image in pixels. Must be divisible by 64.
         * @return {Number}
         */
  }, {
    key: "getHeight",
    value: function getHeight() {
      return this.height;
    }

    /**
     * Sets The height of the image in pixels. Must be divisible by 64.
     * @param {Number} height The height of the image in pixels. Must be divisible by 64.
     */
  }, {
    key: "setHeight",
    value: function setHeight(height) {
      this['height'] = height;
      return this;
    }
    /**
         * Returns The number of iterative diffusion steps to run. A number between 10 and 50.
         * @return {Number}
         */
  }, {
    key: "getSteps",
    value: function getSteps() {
      return this.steps;
    }

    /**
     * Sets The number of iterative diffusion steps to run. A number between 10 and 50.
     * @param {Number} steps The number of iterative diffusion steps to run. A number between 10 and 50.
     */
  }, {
    key: "setSteps",
    value: function setSteps(steps) {
      this['steps'] = steps;
      return this;
    }
    /**
         * Returns Using the same seed can help you create images that look similar. Set to 0 for a random seed. A number between 0 and 4294967295.
         * @return {Number}
         */
  }, {
    key: "getSeed",
    value: function getSeed() {
      return this.seed;
    }

    /**
     * Sets Using the same seed can help you create images that look similar. Set to 0 for a random seed. A number between 0 and 4294967295.
     * @param {Number} seed Using the same seed can help you create images that look similar. Set to 0 for a random seed. A number between 0 and 4294967295.
     */
  }, {
    key: "setSeed",
    value: function setSeed(seed) {
      this['seed'] = seed;
      return this;
    }
    /**
         * Returns Determines how closely the generated image will match the prompt. Lower numbers allow for more creative freedom. A number between 0 and 35.
         * @return {Number}
         */
  }, {
    key: "getCfgScale",
    value: function getCfgScale() {
      return this.cfgScale;
    }

    /**
     * Sets Determines how closely the generated image will match the prompt. Lower numbers allow for more creative freedom. A number between 0 and 35.
     * @param {Number} cfgScale Determines how closely the generated image will match the prompt. Lower numbers allow for more creative freedom. A number between 0 and 35.
     */
  }, {
    key: "setCfgScale",
    value: function setCfgScale(cfgScale) {
      this['cfgScale'] = cfgScale;
      return this;
    }
    /**
         * Returns Apply a preset to generate an image in a particular style. Select from the list of available presets: <ul>   <li>`3d-model`</li>   <li>`analog-film`</li>   <li>`anime`</li>   <li>`cinematic`</li>   <li>`comic-book`</li>   <li>`digital-art`</li>   <li>`enhance`</li>   <li>`fantasy-art`</li>   <li>`isometric`</li>   <li>`line-art`</li>   <li>`low-poly`</li>   <li>`modeling-compound`</li>   <li>`neon-punk`</li>   <li>`origami`</li>   <li>`photographic`</li>   <li>`pixel-art`</li>   <li>`tile-texture`</li> </ul>
         * @return {module:model/StabilityAiTextToImageOptions.StylePresetEnum}
         */
  }, {
    key: "getStylePreset",
    value: function getStylePreset() {
      return this.stylePreset;
    }

    /**
     * Sets Apply a preset to generate an image in a particular style. Select from the list of available presets: <ul>   <li>`3d-model`</li>   <li>`analog-film`</li>   <li>`anime`</li>   <li>`cinematic`</li>   <li>`comic-book`</li>   <li>`digital-art`</li>   <li>`enhance`</li>   <li>`fantasy-art`</li>   <li>`isometric`</li>   <li>`line-art`</li>   <li>`low-poly`</li>   <li>`modeling-compound`</li>   <li>`neon-punk`</li>   <li>`origami`</li>   <li>`photographic`</li>   <li>`pixel-art`</li>   <li>`tile-texture`</li> </ul>
     * @param {module:model/StabilityAiTextToImageOptions.StylePresetEnum} stylePreset Apply a preset to generate an image in a particular style. Select from the list of available presets: <ul>   <li>`3d-model`</li>   <li>`analog-film`</li>   <li>`anime`</li>   <li>`cinematic`</li>   <li>`comic-book`</li>   <li>`digital-art`</li>   <li>`enhance`</li>   <li>`fantasy-art`</li>   <li>`isometric`</li>   <li>`line-art`</li>   <li>`low-poly`</li>   <li>`modeling-compound`</li>   <li>`neon-punk`</li>   <li>`origami`</li>   <li>`photographic`</li>   <li>`pixel-art`</li>   <li>`tile-texture`</li> </ul>
     */
  }, {
    key: "setStylePreset",
    value: function setStylePreset(stylePreset) {
      this['stylePreset'] = stylePreset;
      return this;
    }
  }], [{
    key: "initialize",
    value: function initialize(obj, type, prompt, width, height) {
      obj['type'] = type || 'text-to-image';
      obj['prompt'] = prompt;
      obj['width'] = width;
      obj['height'] = height;
    }

    /**
     * Constructs a <code>StabilityAiTextToImageOptions</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/StabilityAiTextToImageOptions} obj Optional instance to populate.
     * @return {module:model/StabilityAiTextToImageOptions} The populated <code>StabilityAiTextToImageOptions</code> instance.
     */
  }, {
    key: "constructFromObject",
    value: function constructFromObject(data, obj) {
      if (data) {
        obj = obj || new StabilityAiTextToImageOptions();
        if (data.hasOwnProperty('type')) {
          obj['type'] = _ApiClient["default"].convertToType(data['type'], 'String');
        }
        if (data.hasOwnProperty('prompt')) {
          obj['prompt'] = _ApiClient["default"].convertToType(data['prompt'], 'String');
        }
        if (data.hasOwnProperty('engine')) {
          obj['engine'] = _ApiClient["default"].convertToType(data['engine'], 'String');
        }
        if (data.hasOwnProperty('width')) {
          obj['width'] = _ApiClient["default"].convertToType(data['width'], 'Number');
        }
        if (data.hasOwnProperty('height')) {
          obj['height'] = _ApiClient["default"].convertToType(data['height'], 'Number');
        }
        if (data.hasOwnProperty('steps')) {
          obj['steps'] = _ApiClient["default"].convertToType(data['steps'], 'Number');
        }
        if (data.hasOwnProperty('seed')) {
          obj['seed'] = _ApiClient["default"].convertToType(data['seed'], 'Number');
        }
        if (data.hasOwnProperty('cfgScale')) {
          obj['cfgScale'] = _ApiClient["default"].convertToType(data['cfgScale'], 'Number');
        }
        if (data.hasOwnProperty('stylePreset')) {
          obj['stylePreset'] = _ApiClient["default"].convertToType(data['stylePreset'], 'String');
        }
      }
      return obj;
    }

    /**
     * Validates the JSON data with respect to <code>StabilityAiTextToImageOptions</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>StabilityAiTextToImageOptions</code>.
     */
  }, {
    key: "validateJSON",
    value: function validateJSON(data) {
      // check to make sure all required properties are present in the JSON string
      var _iterator = _createForOfIteratorHelper(StabilityAiTextToImageOptions.RequiredProperties),
        _step;
      try {
        for (_iterator.s(); !(_step = _iterator.n()).done;) {
          var property = _step.value;
          if (!data.hasOwnProperty(property)) {
            throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
          }
        }
        // ensure the json data is a string
      } catch (err) {
        _iterator.e(err);
      } finally {
        _iterator.f();
      }
      if (data['type'] && !(typeof data['type'] === 'string' || data['type'] instanceof String)) {
        throw new Error("Expected the field `type` to be a primitive type in the JSON string but got " + data['type']);
      }
      // ensure the json data is a string
      if (data['prompt'] && !(typeof data['prompt'] === 'string' || data['prompt'] instanceof String)) {
        throw new Error("Expected the field `prompt` to be a primitive type in the JSON string but got " + data['prompt']);
      }
      // ensure the json data is a string
      if (data['engine'] && !(typeof data['engine'] === 'string' || data['engine'] instanceof String)) {
        throw new Error("Expected the field `engine` to be a primitive type in the JSON string but got " + data['engine']);
      }
      // ensure the json data is a string
      if (data['stylePreset'] && !(typeof data['stylePreset'] === 'string' || data['stylePreset'] instanceof String)) {
        throw new Error("Expected the field `stylePreset` to be a primitive type in the JSON string but got " + data['stylePreset']);
      }
      return true;
    }
  }]);
}();
StabilityAiTextToImageOptions.RequiredProperties = ["type", "prompt", "width", "height"];

/**
 * The type of asset to generate - set to `text-to-image` for text-to-image.
 * @member {module:model/StabilityAiTextToImageOptions.TypeEnum} type
 * @default 'text-to-image'
 */
StabilityAiTextToImageOptions.prototype['type'] = 'text-to-image';

/**
 * The text prompt to generate an image from.
 * @member {String} prompt
 */
StabilityAiTextToImageOptions.prototype['prompt'] = undefined;

/**
 * The engine (model) to use for generating the image. Select from the list of available engines: <ul>   <li>`stable-diffusion-xl-1024-v0-9`</li>   <li>`stable-diffusion-xl-1024-v1-0`</li>   <li>`stable-diffusion-v1-6`</li>   <li>`stable-diffusion-512-v2-1`</li>   <li>`stable-diffusion-xl-beta-v2-2-2`</li> </ul>
 * @member {module:model/StabilityAiTextToImageOptions.EngineEnum} engine
 * @default 'stable-diffusion-xl-1024-v1-0'
 */
StabilityAiTextToImageOptions.prototype['engine'] = 'stable-diffusion-xl-1024-v1-0';

/**
 * The width of the image in pixels. Must be divisible by 64.
 * @member {Number} width
 */
StabilityAiTextToImageOptions.prototype['width'] = undefined;

/**
 * The height of the image in pixels. Must be divisible by 64.
 * @member {Number} height
 */
StabilityAiTextToImageOptions.prototype['height'] = undefined;

/**
 * The number of iterative diffusion steps to run. A number between 10 and 50.
 * @member {Number} steps
 * @default 30
 */
StabilityAiTextToImageOptions.prototype['steps'] = 30;

/**
 * Using the same seed can help you create images that look similar. Set to 0 for a random seed. A number between 0 and 4294967295.
 * @member {Number} seed
 * @default 0
 */
StabilityAiTextToImageOptions.prototype['seed'] = 0;

/**
 * Determines how closely the generated image will match the prompt. Lower numbers allow for more creative freedom. A number between 0 and 35.
 * @member {Number} cfgScale
 * @default 7
 */
StabilityAiTextToImageOptions.prototype['cfgScale'] = 7;

/**
 * Apply a preset to generate an image in a particular style. Select from the list of available presets: <ul>   <li>`3d-model`</li>   <li>`analog-film`</li>   <li>`anime`</li>   <li>`cinematic`</li>   <li>`comic-book`</li>   <li>`digital-art`</li>   <li>`enhance`</li>   <li>`fantasy-art`</li>   <li>`isometric`</li>   <li>`line-art`</li>   <li>`low-poly`</li>   <li>`modeling-compound`</li>   <li>`neon-punk`</li>   <li>`origami`</li>   <li>`photographic`</li>   <li>`pixel-art`</li>   <li>`tile-texture`</li> </ul>
 * @member {module:model/StabilityAiTextToImageOptions.StylePresetEnum} stylePreset
 */
StabilityAiTextToImageOptions.prototype['stylePreset'] = undefined;

/**
 * Allowed values for the <code>type</code> property.
 * @enum {String}
 * @readonly
 */
StabilityAiTextToImageOptions['TypeEnum'] = {
  /**
   * value: "text-to-image"
   * @const
   */
  "text-to-image": "text-to-image"
};

/**
 * Allowed values for the <code>engine</code> property.
 * @enum {String}
 * @readonly
 */
StabilityAiTextToImageOptions['EngineEnum'] = {
  /**
   * value: "stable-diffusion-xl-1024-v0-9"
   * @const
   */
  "xl-1024-v0-9": "stable-diffusion-xl-1024-v0-9",
  /**
   * value: "stable-diffusion-xl-1024-v1-0"
   * @const
   */
  "xl-1024-v1-0": "stable-diffusion-xl-1024-v1-0",
  /**
   * value: "stable-diffusion-v1-6"
   * @const
   */
  "v1-6": "stable-diffusion-v1-6",
  /**
   * value: "stable-diffusion-512-v2-1"
   * @const
   */
  "512-v2-1": "stable-diffusion-512-v2-1",
  /**
   * value: "stable-diffusion-xl-beta-v2-2-2"
   * @const
   */
  "xl-beta-v2-2-2": "stable-diffusion-xl-beta-v2-2-2"
};

/**
 * Allowed values for the <code>stylePreset</code> property.
 * @enum {String}
 * @readonly
 */
StabilityAiTextToImageOptions['StylePresetEnum'] = {
  /**
   * value: "3d-model"
   * @const
   */
  "3d-model": "3d-model",
  /**
   * value: "analog-film"
   * @const
   */
  "analog-film": "analog-film",
  /**
   * value: "anime"
   * @const
   */
  "anime": "anime",
  /**
   * value: "cinematic"
   * @const
   */
  "cinematic": "cinematic",
  /**
   * value: "comic-book"
   * @const
   */
  "comic-book": "comic-book",
  /**
   * value: "digital-art"
   * @const
   */
  "digital-art": "digital-art",
  /**
   * value: "enhance"
   * @const
   */
  "enhance": "enhance",
  /**
   * value: "fantasy-art"
   * @const
   */
  "fantasy-art": "fantasy-art",
  /**
   * value: "isometric"
   * @const
   */
  "isometric": "isometric",
  /**
   * value: "line-art"
   * @const
   */
  "line-art": "line-art",
  /**
   * value: "low-poly"
   * @const
   */
  "low-poly": "low-poly",
  /**
   * value: "modeling-compound"
   * @const
   */
  "modeling-compound": "modeling-compound",
  /**
   * value: "neon-punk"
   * @const
   */
  "neon-punk": "neon-punk",
  /**
   * value: "origami"
   * @const
   */
  "origami": "origami",
  /**
   * value: "photographic"
   * @const
   */
  "photographic": "photographic",
  /**
   * value: "pixel-art"
   * @const
   */
  "pixel-art": "pixel-art",
  /**
   * value: "tile-texture"
   * @const
   */
  "tile-texture": "tile-texture"
};
var _default = exports["default"] = StabilityAiTextToImageOptions;
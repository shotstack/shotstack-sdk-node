/**
 * Shotstack
 * Shotstack is a video, image and audio editing service that allows for the automated generation of videos, images and audio using JSON and a RESTful API.  You arrange and configure an edit and POST it to the API which will render your media and provide a file  location when complete.  For more details visit [shotstack.io](https://shotstack.io) or checkout our [getting started](https://shotstack.gitbook.io/docs/guides/getting-started) documentation. There are two main API's, one for editing and generating assets (Edit API) and one for managing hosted assets (Serve API).  The Edit API base URL is: <b>https://api.shotstack.io/{version}</b>  The Serve API base URL is: <b>https://api.shotstack.io/serve/{version}</b>
 *
 * The version of the OpenAPI document: v1
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 *
 * OpenAPI Generator version: 5.4.0
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/Crop'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./Crop'));
  } else {
    // Browser globals (root is window)
    if (!root.ShotstackSdk) {
      root.ShotstackSdk = {};
    }
    root.ShotstackSdk.ImageAsset = factory(root.ShotstackSdk.ApiClient, root.ShotstackSdk.Crop);
  }
}(this, function(ApiClient, Crop) {
  'use strict';



  /**
   * The ImageAsset model module.
   * @module model/ImageAsset
   * @version v1
   */

  /**
   * Constructs a new <code>ImageAsset</code>.
   * The ImageAsset is used to create video from images to compose an image. The src must be a publicly accessible URL to an image resource such as a jpg or png file.
   * @alias module:model/ImageAsset
   * @class
   * @param type {String} The type of asset - set to `image` for images.
   * @param src {String} The image source URL. The URL must be publicly accessible or include credentials.
   */
  var exports = function(type, src) {
    var _this = this;

    _this['type'] = type || 'image';
    _this['src'] = src;
  };

  /**
   * Constructs a <code>ImageAsset</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/ImageAsset} obj Optional instance to populate.
   * @return {module:model/ImageAsset} The populated <code>ImageAsset</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();
      if (data.hasOwnProperty('type')) {
        obj['type'] = ApiClient.convertToType(data['type'], 'String');
      }
      if (data.hasOwnProperty('src')) {
        obj['src'] = ApiClient.convertToType(data['src'], 'String');
      }
      if (data.hasOwnProperty('crop')) {
        obj['crop'] = Crop.constructFromObject(data['crop']);
      }
    }
    return obj;
  }

  /**
   * The type of asset - set to `image` for images.
   * @member {String} type
   * @default 'image'
   */
  exports.prototype['type'] = 'image';
  /**
   * The image source URL. The URL must be publicly accessible or include credentials.
   * @member {String} src
   */
  exports.prototype['src'] = undefined;
  /**
   * @member {module:model/Crop} crop
   */
  exports.prototype['crop'] = undefined;


  /**
   * Returns The type of asset - set to `image` for images.
   * @return {String}
   */
  exports.prototype.getType = function() {
    return this['type'];
  }

  /**
   * Sets The type of asset - set to `image` for images.
   * @param {String} type The type of asset - set to `image` for images.
   */
  exports.prototype.setType = function(type) {
    this['type'] = type;
    return this;
  }


  /**
   * Returns The image source URL. The URL must be publicly accessible or include credentials.
   * @return {String}
   */
  exports.prototype.getSrc = function() {
    return this['src'];
  }

  /**
   * Sets The image source URL. The URL must be publicly accessible or include credentials.
   * @param {String} src The image source URL. The URL must be publicly accessible or include credentials.
   */
  exports.prototype.setSrc = function(src) {
    this['src'] = src;
    return this;
  }


  /**
   * @return {module:model/Crop}
   */
  exports.prototype.getCrop = function() {
    return this['crop'];
  }

  /**
   * @param {module:model/Crop} crop
   */
  exports.prototype.setCrop = function(crop) {
    this['crop'] = crop;
    return this;
  }



  return exports;
}));



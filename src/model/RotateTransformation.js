/**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The RotateTransformation model module.
 * @module model/RotateTransformation
 * @version 0.2.6
 */
class RotateTransformation {
    /**
     * Constructs a new <code>RotateTransformation</code>.
     * Rotate a clip by the specified angle in degrees. Rotation origin is set based on the clips &#x60;position&#x60;.
     * @alias module:model/RotateTransformation
     */
    constructor() { 
        
        RotateTransformation.initialize(this);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj) { 
    }

    /**
     * Constructs a <code>RotateTransformation</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/RotateTransformation} obj Optional instance to populate.
     * @return {module:model/RotateTransformation} The populated <code>RotateTransformation</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new RotateTransformation();

            if (data.hasOwnProperty('angle')) {
                obj['angle'] = ApiClient.convertToType(data['angle'], 'Number');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>RotateTransformation</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>RotateTransformation</code>.
     */
    static validateJSON(data) {

        return true;
    }

/**
     * Returns The angle to rotate the clip. Can be 0 to 360, or 0 to -360. Using a positive number rotates the clip clockwise, negative numbers counter-clockwise.
     * @return {Number}
     */
    getAngle() {
        return this.angle;
    }

    /**
     * Sets The angle to rotate the clip. Can be 0 to 360, or 0 to -360. Using a positive number rotates the clip clockwise, negative numbers counter-clockwise.
     * @param {Number} angle The angle to rotate the clip. Can be 0 to 360, or 0 to -360. Using a positive number rotates the clip clockwise, negative numbers counter-clockwise.
     */
    setAngle(angle) {
        this['angle'] = angle;
        return this;
    }

}



/**
 * The angle to rotate the clip. Can be 0 to 360, or 0 to -360. Using a positive number rotates the clip clockwise, negative numbers counter-clockwise.
 * @member {Number} angle
 */
RotateTransformation.prototype['angle'] = undefined;






export default RotateTransformation;


"use strict";

Object.defineProperty(exports, "__esModule", {
  value: true
});
exports["default"] = void 0;
var _ApiClient = _interopRequireDefault(require("../ApiClient"));
var _GeneratedAsset = _interopRequireDefault(require("../model/GeneratedAsset"));
var _GeneratedAssetErrorResponse = _interopRequireDefault(require("../model/GeneratedAssetErrorResponse"));
var _GeneratedAssetResponse = _interopRequireDefault(require("../model/GeneratedAssetResponse"));
function _interopRequireDefault(e) { return e && e.__esModule ? e : { "default": e }; }
function _typeof(o) { "@babel/helpers - typeof"; return _typeof = "function" == typeof Symbol && "symbol" == typeof Symbol.iterator ? function (o) { return typeof o; } : function (o) { return o && "function" == typeof Symbol && o.constructor === Symbol && o !== Symbol.prototype ? "symbol" : typeof o; }, _typeof(o); }
function _classCallCheck(a, n) { if (!(a instanceof n)) throw new TypeError("Cannot call a class as a function"); }
function _defineProperties(e, r) { for (var t = 0; t < r.length; t++) { var o = r[t]; o.enumerable = o.enumerable || !1, o.configurable = !0, "value" in o && (o.writable = !0), Object.defineProperty(e, _toPropertyKey(o.key), o); } }
function _createClass(e, r, t) { return r && _defineProperties(e.prototype, r), t && _defineProperties(e, t), Object.defineProperty(e, "prototype", { writable: !1 }), e; }
function _toPropertyKey(t) { var i = _toPrimitive(t, "string"); return "symbol" == _typeof(i) ? i : i + ""; }
function _toPrimitive(t, r) { if ("object" != _typeof(t) || !t) return t; var e = t[Symbol.toPrimitive]; if (void 0 !== e) { var i = e.call(t, r || "default"); if ("object" != _typeof(i)) return i; throw new TypeError("@@toPrimitive must return a primitive value."); } return ("string" === r ? String : Number)(t); } /**
 * Shotstack
 * Official Node SDK for the Shotstack Cloud Video Editing API
 *
 * The version of the OpenAPI document: v1
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */
/**
* Create service.
* @module api/CreateApi
* @version 0.2.9
*/
var CreateApi = exports["default"] = /*#__PURE__*/function () {
  /**
  * Constructs a new CreateApi. 
  * @alias module:api/CreateApi
  * @class
  * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
  * default to {@link module:ApiClient#instance} if unspecified.
  */
  function CreateApi(apiClient) {
    _classCallCheck(this, CreateApi);
    this.apiClient = apiClient || _ApiClient["default"].instance;
  }

  /**
   * Get Generated Asset
   * Get the generated assets status, url and details by ID.  **Base URL:** <a href=\"#\">https://api.shotstack.io/create/{version}</a> 
   * @param {String} id The id of the source file in [KSUID](https://github.com/segmentio/ksuid#what-is-a-ksuid) format.
   * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GeneratedAssetResponse} and HTTP response
   */
  return _createClass(CreateApi, [{
    key: "getGeneratedAssetWithHttpInfo",
    value: function getGeneratedAssetWithHttpInfo(id) {
      var postBody = null;
      // verify the required parameter 'id' is set
      if (id === undefined || id === null) {
        throw new Error("Missing the required parameter 'id' when calling getGeneratedAsset");
      }
      var pathParams = {
        'id': id
      };
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['DeveloperKey'];
      var contentTypes = [];
      var accepts = ['application/json'];
      var returnType = _GeneratedAssetResponse["default"];
      return this.apiClient.callApi('/assets/{id}', 'GET', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Get Generated Asset
     * Get the generated assets status, url and details by ID.  **Base URL:** <a href=\"#\">https://api.shotstack.io/create/{version}</a> 
     * @param {String} id The id of the source file in [KSUID](https://github.com/segmentio/ksuid#what-is-a-ksuid) format.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GeneratedAssetResponse}
     */
  }, {
    key: "getGeneratedAsset",
    value: function getGeneratedAsset(id) {
      return this.getGeneratedAssetWithHttpInfo(id).then(function (response_and_data) {
        return response_and_data.data;
      });
    }

    /**
     * Generate Asset
     * Generate an asset using a Shotstack or third party provider. Chose the provider, type of asset and provide prompts, inputs and options to generate the asset. Once generated the asset can be used with the [Edit](#tocs_edit) API or downloaded.  **Base URL:** <a href=\"#\">https://api.shotstack.io/create/{version}</a> 
     * @param {module:model/GeneratedAsset} generatedAsset Generate an asset using the specified provider, type and options.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with an object containing data of type {@link module:model/GeneratedAssetResponse} and HTTP response
     */
  }, {
    key: "postGenerateAssetWithHttpInfo",
    value: function postGenerateAssetWithHttpInfo(generatedAsset) {
      var postBody = generatedAsset;
      // verify the required parameter 'generatedAsset' is set
      if (generatedAsset === undefined || generatedAsset === null) {
        throw new Error("Missing the required parameter 'generatedAsset' when calling postGenerateAsset");
      }
      var pathParams = {};
      var queryParams = {};
      var headerParams = {};
      var formParams = {};
      var authNames = ['DeveloperKey'];
      var contentTypes = ['application/json'];
      var accepts = ['application/json'];
      var returnType = _GeneratedAssetResponse["default"];
      return this.apiClient.callApi('/assets', 'POST', pathParams, queryParams, headerParams, formParams, postBody, authNames, contentTypes, accepts, returnType, null);
    }

    /**
     * Generate Asset
     * Generate an asset using a Shotstack or third party provider. Chose the provider, type of asset and provide prompts, inputs and options to generate the asset. Once generated the asset can be used with the [Edit](#tocs_edit) API or downloaded.  **Base URL:** <a href=\"#\">https://api.shotstack.io/create/{version}</a> 
     * @param {module:model/GeneratedAsset} generatedAsset Generate an asset using the specified provider, type and options.
     * @return {Promise} a {@link https://www.promisejs.org/|Promise}, with data of type {@link module:model/GeneratedAssetResponse}
     */
  }, {
    key: "postGenerateAsset",
    value: function postGenerateAsset(generatedAsset) {
      return this.postGenerateAssetWithHttpInfo(generatedAsset).then(function (response_and_data) {
        return response_and_data.data;
      });
    }
  }]);
}();